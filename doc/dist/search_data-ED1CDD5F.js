searchData={"items":[{"type":"module","title":"Quant.Explorer","doc":"Quant.Explorer - High-performance standardized financial data API for Elixir.\n\nFetch financial and cryptocurrency data from multiple providers with universal\nparameters and identical output schemas for seamless analysis.","ref":"Quant.Explorer.html"},{"type":"module","title":"Key Features - Quant.Explorer","doc":"- **Universal Parameters**: Same parameters work with ALL providers\n- **Identical Schemas**: All DataFrames have consistent column structures\n- **High Performance**: Built on Explorer's Polars backend\n- **Type Safety**: Strong typing and validation throughout\n- **Multi-Provider**: Yahoo Finance, Alpha Vantage, Binance, CoinGecko, Twelve Data","ref":"Quant.Explorer.html#module-key-features"},{"type":"module","title":"Quick Start - Quant.Explorer","doc":"# Universal parameters work with any provider\n    {:ok, df} = Quant.Explorer.history(\"AAPL\",\n      provider: :yahoo_finance, interval: \"1d\", period: \"1y\")\n\n    {:ok, df} = Quant.Explorer.history(\"BTCUSDT\",\n      provider: :binance, interval: \"1d\", period: \"1y\")\n\n    # All DataFrames have identical schemas - combine seamlessly\n    DataFrame.concat_rows(df1, df2)","ref":"Quant.Explorer.html#module-quick-start"},{"type":"module","title":"Standardized Parameters - Quant.Explorer","doc":"- `:provider` - Data provider (:yahoo_finance, :alpha_vantage, :binance, :coin_gecko, :twelve_data)\n- `:interval` - Standard intervals: \"1m\", \"5m\", \"15m\", \"30m\", \"1h\", \"1d\", \"1w\", \"1mo\"\n- `:period` - Standard periods: \"1d\", \"5d\", \"1mo\", \"3mo\", \"6mo\", \"1y\", \"2y\", \"5y\", \"10y\", \"max\"\n- `:limit` - Number of data points (1-5000)\n- `:start_date`/`:end_date` - Date range (Date, DateTime, or ISO string)\n- `:currency` - Base currency: \"usd\", \"eur\", \"btc\", \"eth\"\n- `:api_key` - API key for authentication","ref":"Quant.Explorer.html#module-standardized-parameters"},{"type":"type","title":"Quant.Explorer.options/0","doc":"","ref":"Quant.Explorer.html#t:options/0"},{"type":"type","title":"Quant.Explorer.provider/0","doc":"","ref":"Quant.Explorer.html#t:provider/0"},{"type":"type","title":"Quant.Explorer.symbol/0","doc":"","ref":"Quant.Explorer.html#t:symbol/0"},{"type":"type","title":"Quant.Explorer.symbols/0","doc":"","ref":"Quant.Explorer.html#t:symbols/0"},{"type":"function","title":"Quant.Explorer.config/0","doc":"Gets configuration information for the library.","ref":"Quant.Explorer.html#config/0"},{"type":"function","title":"Quant.Explorer.fetch/2","doc":"Alias for history/2. Deprecated - use history/2 directly.","ref":"Quant.Explorer.html#fetch/2"},{"type":"function","title":"Quant.Explorer.history/2","doc":"Fetches standardized historical data with universal parameters.\n\nAll providers return identical DataFrame schemas with these columns:\n- `symbol`, `timestamp`, `open`, `high`, `low`, `close`, `volume`\n- `adj_close`, `market_cap`, `provider`, `currency`, `timezone`","ref":"Quant.Explorer.html#history/2"},{"type":"function","title":"Examples - Quant.Explorer.history/2","doc":"# Same parameters work with any provider\n    {:ok, df} = Quant.Explorer.history(\"AAPL\", provider: :yahoo_finance, interval: \"1d\", period: \"1y\")\n    {:ok, df} = Quant.Explorer.history(\"BTCUSDT\", provider: :binance, interval: \"1d\", period: \"1y\")\n\n    # Combine data from multiple providers seamlessly\n    DataFrame.concat_rows(df1, df2)","ref":"Quant.Explorer.html#history/2-examples"},{"type":"function","title":"Quant.Explorer.info/2","doc":"Fetches company/asset information.\nNote: Info structure varies between providers and is not fully standardized.","ref":"Quant.Explorer.html#info/2"},{"type":"function","title":"Quant.Explorer.providers/0","doc":"Lists all available providers and their status.","ref":"Quant.Explorer.html#providers/0"},{"type":"function","title":"Quant.Explorer.quote/2","doc":"Fetches standardized real-time quotes with universal parameters.\n\nAll providers return identical DataFrame schemas with these columns:\n- `symbol`, `price`, `change`, `change_percent`, `volume`, `high_24h`, `low_24h`\n- `market_cap`, `timestamp`, `provider`, `currency`, `market_state`","ref":"Quant.Explorer.html#quote/2"},{"type":"function","title":"Quant.Explorer.search/2","doc":"Searches for symbols with standardized results.\n\nAll providers return identical DataFrame schemas with these columns:\n- `symbol`, `name`, `type`, `exchange`, `currency`, `country`\n- `sector`, `industry`, `market_cap`, `provider`, `match_score`","ref":"Quant.Explorer.html#search/2"},{"type":"function","title":"Quant.Explorer.supported_currencies/0","doc":"Lists supported currencies for crypto providers.","ref":"Quant.Explorer.html#supported_currencies/0"},{"type":"function","title":"Quant.Explorer.supported_intervals/0","doc":"Lists supported standard intervals.","ref":"Quant.Explorer.html#supported_intervals/0"},{"type":"function","title":"Quant.Explorer.supported_periods/0","doc":"Lists supported standard periods.","ref":"Quant.Explorer.html#supported_periods/0"},{"type":"module","title":"Quant.Explorer.Config","doc":"Centralized configuration management for Quant.Explorer.\n\nThis module provides a consistent interface for accessing configuration\nvalues from application environment, with sensible defaults and runtime\nvalue resolution (e.g., from system environment variables).","ref":"Quant.Explorer.Config.html"},{"type":"function","title":"Quant.Explorer.Config.api_key/1","doc":"Gets an API key for a specific provider.\n\nHandles runtime resolution of system environment variables.","ref":"Quant.Explorer.Config.html#api_key/1"},{"type":"function","title":"Quant.Explorer.Config.api_keys/0","doc":"Gets all API keys as a map, resolving system environment variables.","ref":"Quant.Explorer.Config.html#api_keys/0"},{"type":"function","title":"Quant.Explorer.Config.cache_config/0","doc":"Gets the caching configuration.","ref":"Quant.Explorer.Config.html#cache_config/0"},{"type":"function","title":"Quant.Explorer.Config.cache_ttl/0","doc":"Gets the cache TTL (time-to-live) in milliseconds.","ref":"Quant.Explorer.Config.html#cache_ttl/0"},{"type":"function","title":"Quant.Explorer.Config.get/2","doc":"Gets a configuration value for the given key.\n\nSupports nested keys using dot notation as atoms:\n- `get(:api_keys)`\n- `get([:rate_limits, :yahoo_finance])`\n- `get(:http_timeout)`\n\nReturns the default value if the configuration is not found.","ref":"Quant.Explorer.Config.html#get/2"},{"type":"function","title":"Quant.Explorer.Config.http_timeout/0","doc":"Gets the HTTP timeout in milliseconds.","ref":"Quant.Explorer.Config.html#http_timeout/0"},{"type":"function","title":"Quant.Explorer.Config.log_level/0","doc":"Gets the log level for the application.","ref":"Quant.Explorer.Config.html#log_level/0"},{"type":"function","title":"Quant.Explorer.Config.provider_config/1","doc":"Gets the configuration for a specific provider.\n\nReturns a map with provider-specific configuration including\nrate limits, API keys, base URLs, etc.","ref":"Quant.Explorer.Config.html#provider_config/1"},{"type":"function","title":"Quant.Explorer.Config.rate_limit/1","doc":"Gets the rate limit for a specific provider (requests per minute).\nThis is kept for backwards compatibility but new code should use\nthe provider-specific configurations.","ref":"Quant.Explorer.Config.html#rate_limit/1"},{"type":"function","title":"Quant.Explorer.Config.rate_limiting_config/0","doc":"Gets the rate limiting configuration including backend and provider-specific settings.","ref":"Quant.Explorer.Config.html#rate_limiting_config/0"},{"type":"function","title":"Quant.Explorer.Config.telemetry_enabled?/0","doc":"Checks if telemetry is enabled.","ref":"Quant.Explorer.Config.html#telemetry_enabled?/0"},{"type":"function","title":"Quant.Explorer.Config.user_agent/0","doc":"Gets the user agent string for HTTP requests.","ref":"Quant.Explorer.Config.html#user_agent/0"},{"type":"function","title":"Quant.Explorer.Config.validate_config/0","doc":"Validates that required configuration is present.\n\nReturns `:ok` if all required config is present, or\n`{:error, missing_keys}` if anything is missing.","ref":"Quant.Explorer.Config.html#validate_config/0"},{"type":"module","title":"Quant.Explorer.DataTransformer","doc":"Data normalization utilities for converting raw API responses into standardized Explorer DataFrames.\n\nThis module handles the transformation of various data formats (JSON, CSV, maps, lists)\nfrom different providers into consistent DataFrame schemas that can be used across\nthe entire library.","ref":"Quant.Explorer.DataTransformer.html"},{"type":"type","title":"Quant.Explorer.DataTransformer.raw_data/0","doc":"","ref":"Quant.Explorer.DataTransformer.html#t:raw_data/0"},{"type":"type","title":"Quant.Explorer.DataTransformer.schema/0","doc":"","ref":"Quant.Explorer.DataTransformer.html#t:schema/0"},{"type":"function","title":"Quant.Explorer.DataTransformer.clean_dataframe/2","doc":"Filters out rows with invalid or missing critical data.","ref":"Quant.Explorer.DataTransformer.html#clean_dataframe/2"},{"type":"function","title":"Quant.Explorer.DataTransformer.csv_to_dataframe/2","doc":"Converts CSV string to DataFrame with proper column types.","ref":"Quant.Explorer.DataTransformer.html#csv_to_dataframe/2"},{"type":"function","title":"Quant.Explorer.DataTransformer.normalize_number/1","doc":"Normalizes numeric values, handling strings, floats, integers, and nil.","ref":"Quant.Explorer.DataTransformer.html#normalize_number/1"},{"type":"function","title":"Quant.Explorer.DataTransformer.normalize_timestamp/1","doc":"Normalizes timestamps from various formats to DateTime.\n\nHandles:\n- Unix timestamps (seconds/milliseconds)\n- ISO 8601 strings\n- Date strings in various formats\n- Already parsed DateTime structs","ref":"Quant.Explorer.DataTransformer.html#normalize_timestamp/1"},{"type":"function","title":"Quant.Explorer.DataTransformer.normalize_volume/1","doc":"Normalizes volume values, typically as integers.","ref":"Quant.Explorer.DataTransformer.html#normalize_volume/1"},{"type":"function","title":"Quant.Explorer.DataTransformer.transform_history/3","doc":"Transforms raw historical data into a standardized DataFrame.\n\nExpected columns in output:\n- symbol (string): Stock/crypto symbol\n- timestamp (datetime): Data timestamp\n- open (f64): Opening price\n- high (f64): High price\n- low (f64): Low price\n- close (f64): Closing price\n- volume (s64): Trading volume\n- adj_close (f64): Adjusted closing price (optional)","ref":"Quant.Explorer.DataTransformer.html#transform_history/3"},{"type":"function","title":"Quant.Explorer.DataTransformer.transform_quote/3","doc":"Transforms raw quote data into a standardized DataFrame.\n\nExpected columns in output:\n- symbol (string): Stock/crypto symbol\n- price (f64): Current price\n- change (f64): Price change\n- change_percent (f64): Percentage change\n- volume (s64): Current volume\n- timestamp (datetime): Quote timestamp","ref":"Quant.Explorer.DataTransformer.html#transform_quote/3"},{"type":"function","title":"Quant.Explorer.DataTransformer.transform_search/2","doc":"Transforms raw search results into a standardized DataFrame.\n\nExpected columns in output:\n- symbol (string): Trading symbol\n- name (string): Company/asset name\n- type (string): Asset type (stock, etf, crypto, etc.)\n- exchange (string): Trading exchange (optional)","ref":"Quant.Explorer.DataTransformer.html#transform_search/2"},{"type":"module","title":"Quant.Explorer.HttpClient","doc":"HTTP client wrapper with retry logic, timeout handling, and standardized error responses.\n\nThis module provides a consistent interface for making HTTP requests across all providers,\nwith built-in retry mechanisms and error handling.","ref":"Quant.Explorer.HttpClient.html"},{"type":"type","title":"Quant.Explorer.HttpClient.headers/0","doc":"","ref":"Quant.Explorer.HttpClient.html#t:headers/0"},{"type":"type","title":"Quant.Explorer.HttpClient.options/0","doc":"","ref":"Quant.Explorer.HttpClient.html#t:options/0"},{"type":"type","title":"Quant.Explorer.HttpClient.params/0","doc":"","ref":"Quant.Explorer.HttpClient.html#t:params/0"},{"type":"type","title":"Quant.Explorer.HttpClient.response/0","doc":"","ref":"Quant.Explorer.HttpClient.html#t:response/0"},{"type":"type","title":"Quant.Explorer.HttpClient.url/0","doc":"","ref":"Quant.Explorer.HttpClient.html#t:url/0"},{"type":"function","title":"Quant.Explorer.HttpClient.decode_json/1","doc":"Decodes JSON response body.\n\nReturns `{:ok, decoded_data}` or `{:error, {:parse_error, reason}}`.","ref":"Quant.Explorer.HttpClient.html#decode_json/1"},{"type":"function","title":"Quant.Explorer.HttpClient.extract_error_message/1","doc":"Extracts error message from HTTP response based on common API patterns.","ref":"Quant.Explorer.HttpClient.html#extract_error_message/1"},{"type":"function","title":"Quant.Explorer.HttpClient.get/3","doc":"Makes a GET request with optional query parameters.","ref":"Quant.Explorer.HttpClient.html#get/3"},{"type":"function","title":"Options - Quant.Explorer.HttpClient.get/3","doc":"- `:timeout` - Request timeout in milliseconds (default: 10000)\n- `:retries` - Number of retry attempts (default: 3)\n- `:retry_delay` - Delay between retries in milliseconds (default: 1000)\n- `:headers` - Additional HTTP headers\n- `:follow_redirect` - Whether to follow redirects (default: true)","ref":"Quant.Explorer.HttpClient.html#get/3-options"},{"type":"function","title":"Quant.Explorer.HttpClient.post/3","doc":"Makes a POST request with a request body.","ref":"Quant.Explorer.HttpClient.html#post/3"},{"type":"function","title":"Options - Quant.Explorer.HttpClient.post/3","doc":"Same as `get/3`, plus:\n- `:content_type` - Content-Type header (default: \"application/json\")","ref":"Quant.Explorer.HttpClient.html#post/3-options"},{"type":"function","title":"Quant.Explorer.HttpClient.request/5","doc":"Makes a generic HTTP request with retry logic.","ref":"Quant.Explorer.HttpClient.html#request/5"},{"type":"function","title":"Quant.Explorer.HttpClient.success?/1","doc":"Checks if HTTP response indicates success (2xx status code).","ref":"Quant.Explorer.HttpClient.html#success?/1"},{"type":"module","title":"Quant.Explorer.HttpClientConfig","doc":"Configuration module for selecting the appropriate HTTP client based on environment.","ref":"Quant.Explorer.HttpClientConfig.html"},{"type":"function","title":"Quant.Explorer.HttpClientConfig.decode_json/1","doc":"Decodes JSON using the configured client.","ref":"Quant.Explorer.HttpClientConfig.html#decode_json/1"},{"type":"function","title":"Quant.Explorer.HttpClientConfig.get/3","doc":"Makes an HTTP GET request using the configured client.","ref":"Quant.Explorer.HttpClientConfig.html#get/3"},{"type":"function","title":"Quant.Explorer.HttpClientConfig.http_client/0","doc":"Returns the HTTP client module to use based on the current environment.\nIn test environment with mocking enabled, returns the test client.\nOtherwise returns the standard HTTP client.","ref":"Quant.Explorer.HttpClientConfig.html#http_client/0"},{"type":"function","title":"Quant.Explorer.HttpClientConfig.post/3","doc":"Makes an HTTP POST request using the configured client.","ref":"Quant.Explorer.HttpClientConfig.html#post/3"},{"type":"module","title":"Quant.Explorer.Providers.AlphaVantage","doc":"Alpha Vantage data provider for Quant.Explorer.\n\nProvides access to Alpha Vantage's comprehensive financial data including:\n- Historical stock data (daily, weekly, monthly)\n- Real-time quotes\n- Symbol search\n- Company fundamentals\n- Forex and commodity data","ref":"Quant.Explorer.Providers.AlphaVantage.html"},{"type":"module","title":"Configuration - Quant.Explorer.Providers.AlphaVantage","doc":"Requires an API key from Alpha Vantage. Set the ALPHA_VANTAGE_API_KEY environment variable\nor configure it in your application config:\n\n    config :quant,\n      api_keys: %{\n        alpha_vantage: \"your_api_key_here\"\n      }","ref":"Quant.Explorer.Providers.AlphaVantage.html#module-configuration"},{"type":"module","title":"Rate Limits - Quant.Explorer.Providers.AlphaVantage","doc":"- Free tier: 25 requests per day, 5 API requests per minute\n- Premium: 75 requests per minute, higher daily limits","ref":"Quant.Explorer.Providers.AlphaVantage.html#module-rate-limits"},{"type":"module","title":"Examples - Quant.Explorer.Providers.AlphaVantage","doc":"# Historical data\n    {:ok, df} = AlphaVantage.history(\"IBM\", outputsize: \"compact\")\n\n    # Real-time quote\n    {:ok, df} = AlphaVantage.quote(\"IBM\")\n\n    # Search symbols\n    {:ok, df} = AlphaVantage.search(\"Microsoft\")","ref":"Quant.Explorer.Providers.AlphaVantage.html#module-examples"},{"type":"type","title":"Quant.Explorer.Providers.AlphaVantage.options/0","doc":"","ref":"Quant.Explorer.Providers.AlphaVantage.html#t:options/0"},{"type":"type","title":"Quant.Explorer.Providers.AlphaVantage.symbol/0","doc":"","ref":"Quant.Explorer.Providers.AlphaVantage.html#t:symbol/0"},{"type":"type","title":"Quant.Explorer.Providers.AlphaVantage.symbols/0","doc":"","ref":"Quant.Explorer.Providers.AlphaVantage.html#t:symbols/0"},{"type":"function","title":"Quant.Explorer.Providers.AlphaVantage.history/2","doc":"Fetches historical data for a symbol.","ref":"Quant.Explorer.Providers.AlphaVantage.html#history/2"},{"type":"function","title":"Options - Quant.Explorer.Providers.AlphaVantage.history/2","doc":"- `:interval` - Time interval: \"1min\", \"5min\", \"15min\", \"30min\", \"60min\", \"daily\", \"weekly\", \"monthly\" (default: \"daily\")\n- `:outputsize` - Data size: \"compact\" (last 100 points) or \"full\" (all available) (default: \"compact\")\n- `:adjusted` - Whether to include adjusted close prices (default: true)","ref":"Quant.Explorer.Providers.AlphaVantage.html#history/2-options"},{"type":"function","title":"Examples - Quant.Explorer.Providers.AlphaVantage.history/2","doc":"{:ok, df} = AlphaVantage.history(\"IBM\")\n    {:ok, df} = AlphaVantage.history(\"AAPL\", interval: \"5min\", outputsize: \"full\")","ref":"Quant.Explorer.Providers.AlphaVantage.html#history/2-examples"},{"type":"function","title":"Quant.Explorer.Providers.AlphaVantage.info/2","doc":"Alpha Vantage doesn't provide company info in the same way as other providers.\nThis function returns an error indicating the feature is not supported.","ref":"Quant.Explorer.Providers.AlphaVantage.html#info/2"},{"type":"function","title":"Options - Quant.Explorer.Providers.AlphaVantage.info/2","doc":"- `:api_key` - Alpha Vantage API key (optional, will use config if not provided)","ref":"Quant.Explorer.Providers.AlphaVantage.html#info/2-options"},{"type":"function","title":"Quant.Explorer.Providers.AlphaVantage.quote/2","doc":"Fetches real-time quotes for one or more symbols.","ref":"Quant.Explorer.Providers.AlphaVantage.html#quote/2"},{"type":"function","title":"Options - Quant.Explorer.Providers.AlphaVantage.quote/2","doc":"- `:api_key` - Alpha Vantage API key (optional, will use config if not provided)","ref":"Quant.Explorer.Providers.AlphaVantage.html#quote/2-options"},{"type":"function","title":"Examples - Quant.Explorer.Providers.AlphaVantage.quote/2","doc":"{:ok, df} = AlphaVantage.quote(\"IBM\")\n    {:ok, df} = AlphaVantage.quote(\"IBM\", api_key: \"YOUR_API_KEY\")\n    {:ok, df} = AlphaVantage.quote([\"AAPL\", \"MSFT\", \"GOOGL\"], api_key: \"YOUR_API_KEY\")","ref":"Quant.Explorer.Providers.AlphaVantage.html#quote/2-examples"},{"type":"function","title":"Quant.Explorer.Providers.AlphaVantage.search/2","doc":"Searches for symbols matching a query.","ref":"Quant.Explorer.Providers.AlphaVantage.html#search/2"},{"type":"function","title":"Options - Quant.Explorer.Providers.AlphaVantage.search/2","doc":"- `:api_key` - Alpha Vantage API key (optional, will use config if not provided)","ref":"Quant.Explorer.Providers.AlphaVantage.html#search/2-options"},{"type":"function","title":"Examples - Quant.Explorer.Providers.AlphaVantage.search/2","doc":"{:ok, df} = AlphaVantage.search(\"Microsoft\")\n    {:ok, df} = AlphaVantage.search(\"AAPL\", api_key: \"YOUR_API_KEY\")","ref":"Quant.Explorer.Providers.AlphaVantage.html#search/2-examples"},{"type":"behaviour","title":"Quant.Explorer.Providers.Behaviour","doc":"Behaviour that all data providers must implement.\n\nThis behaviour defines the standard interface for financial data providers,\nensuring consistent API across different data sources like Yahoo Finance,\nAlpha Vantage, Binance, CoinGecko, etc.\n\nAll providers must return data as Explorer DataFrames with standardized\ncolumn names and data types for interoperability.","ref":"Quant.Explorer.Providers.Behaviour.html"},{"type":"type","title":"Quant.Explorer.Providers.Behaviour.interval/0","doc":"","ref":"Quant.Explorer.Providers.Behaviour.html#t:interval/0"},{"type":"type","title":"Quant.Explorer.Providers.Behaviour.options/0","doc":"","ref":"Quant.Explorer.Providers.Behaviour.html#t:options/0"},{"type":"type","title":"Quant.Explorer.Providers.Behaviour.period/0","doc":"","ref":"Quant.Explorer.Providers.Behaviour.html#t:period/0"},{"type":"type","title":"Quant.Explorer.Providers.Behaviour.symbol/0","doc":"","ref":"Quant.Explorer.Providers.Behaviour.html#t:symbol/0"},{"type":"type","title":"Quant.Explorer.Providers.Behaviour.symbols/0","doc":"","ref":"Quant.Explorer.Providers.Behaviour.html#t:symbols/0"},{"type":"callback","title":"Quant.Explorer.Providers.Behaviour.history/2","doc":"Fetches historical price data for one or more symbols.\n\nReturns a DataFrame with standardized columns:\n- symbol (string): Stock/crypto symbol\n- timestamp (datetime): Data timestamp\n- open (f64): Opening price\n- high (f64): High price\n- low (f64): Low price\n- close (f64): Closing price\n- volume (s64): Trading volume\n- adj_close (f64): Adjusted closing price (optional)","ref":"Quant.Explorer.Providers.Behaviour.html#c:history/2"},{"type":"callback","title":"Options - Quant.Explorer.Providers.Behaviour.history/2","doc":"- `:api_key` - API key for providers that require authentication (optional, will use config if not provided)\n- `:period` - Time period (e.g., \"1d\", \"5d\", \"1mo\", \"3mo\", \"6mo\", \"1y\", \"2y\", \"5y\", \"10y\", \"ytd\", \"max\")\n- `:interval` - Data interval (e.g., \"1m\", \"2m\", \"5m\", \"15m\", \"30m\", \"60m\", \"90m\", \"1h\", \"1d\", \"5d\", \"1wk\", \"1mo\", \"3mo\")\n- `:start_date` - Start date as Date struct or ISO string\n- `:end_date` - End date as Date struct or ISO string","ref":"Quant.Explorer.Providers.Behaviour.html#c:history/2-options"},{"type":"callback","title":"Quant.Explorer.Providers.Behaviour.info/2","doc":"Fetches company/asset information for a symbol.\n\nReturns a map containing available metadata like:\n- name, sector, industry, description\n- market_cap, shares_outstanding\n- financial ratios and metrics\n\nStructure may vary by provider.","ref":"Quant.Explorer.Providers.Behaviour.html#c:info/2"},{"type":"callback","title":"Options - Quant.Explorer.Providers.Behaviour.info/2","doc":"- `:api_key` - API key for providers that require authentication (optional, will use config if not provided)","ref":"Quant.Explorer.Providers.Behaviour.html#c:info/2-options"},{"type":"callback","title":"Quant.Explorer.Providers.Behaviour.quote/2","doc":"Fetches current quote data for one or more symbols.\n\nReturns a DataFrame with standardized columns:\n- symbol (string): Stock/crypto symbol\n- price (f64): Current price\n- change (f64): Price change\n- change_percent (f64): Percentage change\n- volume (s64): Current volume\n- timestamp (datetime): Quote timestamp","ref":"Quant.Explorer.Providers.Behaviour.html#c:quote/2"},{"type":"callback","title":"Options - Quant.Explorer.Providers.Behaviour.quote/2","doc":"- `:api_key` - API key for providers that require authentication (optional, will use config if not provided)","ref":"Quant.Explorer.Providers.Behaviour.html#c:quote/2-options"},{"type":"callback","title":"Quant.Explorer.Providers.Behaviour.search/2","doc":"Searches for symbols matching a query string.\n\nReturns a DataFrame with columns:\n- symbol (string): Trading symbol\n- name (string): Company/asset name\n- type (string): Asset type (stock, etf, crypto, etc.)\n- exchange (string): Trading exchange (optional)","ref":"Quant.Explorer.Providers.Behaviour.html#c:search/2"},{"type":"callback","title":"Options - Quant.Explorer.Providers.Behaviour.search/2","doc":"- `:api_key` - API key for providers that require authentication (optional, will use config if not provided)","ref":"Quant.Explorer.Providers.Behaviour.html#c:search/2-options"},{"type":"module","title":"Quant.Explorer.Providers.Binance","doc":"Binance provider implementation for cryptocurrency data.\n\nThis module provides access to Binance public API data including:\n- Historical OHLCV data (klines/candlesticks)\n- Real-time ticker statistics (24hr ticker)\n- Symbol search and exchange information\n\nAll data is returned as Explorer DataFrames for immediate analysis.","ref":"Quant.Explorer.Providers.Binance.html"},{"type":"module","title":"Binance API Endpoints - Quant.Explorer.Providers.Binance","doc":"- Historical: `https://api.binance.com/api/v3/klines`\n- 24hr Ticker: `https://api.binance.com/api/v3/ticker/24hr`\n- Exchange Info: `https://api.binance.com/api/v3/exchangeInfo`","ref":"Quant.Explorer.Providers.Binance.html#module-binance-api-endpoints"},{"type":"module","title":"Rate Limiting - Quant.Explorer.Providers.Binance","doc":"Binance uses weighted rate limiting (1200 weight per minute):\n- Klines: 2-20 weight (based on limit parameter)\n- 24hr Ticker: 2 weight (single symbol), 80 weight (all symbols)\n- Exchange Info: 20 weight","ref":"Quant.Explorer.Providers.Binance.html#module-rate-limiting"},{"type":"module","title":"Interval Mapping - Quant.Explorer.Providers.Binance","doc":"Binance intervals: 1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d, 3d, 1w, 1M","ref":"Quant.Explorer.Providers.Binance.html#module-interval-mapping"},{"type":"module","title":"Examples - Quant.Explorer.Providers.Binance","doc":"# Historical data (klines)\n    {:ok, df} = Binance.history(\"BTCUSDT\", interval: \"1h\", limit: 100)\n\n    # Multiple symbols quotes\n    {:ok, df} = Binance.quote([\"BTCUSDT\", \"ETHUSDT\", \"ADAUSDT\"])\n\n    # Search for trading pairs\n    {:ok, df} = Binance.search(\"BTC\")\n\n    # All available symbols\n    {:ok, df} = Binance.search(\"\")","ref":"Quant.Explorer.Providers.Binance.html#module-examples"},{"type":"function","title":"Quant.Explorer.Providers.Binance.get_all_symbols/0","doc":"Get all available trading pairs on Binance.","ref":"Quant.Explorer.Providers.Binance.html#get_all_symbols/0"},{"type":"function","title":"Quant.Explorer.Providers.Binance.history_range/4","doc":"Get klines/candlestick data with time range.\nAutomatically calculates limit based on time range and interval.","ref":"Quant.Explorer.Providers.Binance.html#history_range/4"},{"type":"module","title":"Quant.Explorer.Providers.CoinGecko","doc":"CoinGecko cryptocurrency data provider.\n\nProvides access to CoinGecko's comprehensive cryptocurrency data including:\n- Historical price data (OHLCV)\n- Current market prices and statistics\n- Coin information and metadata\n- Market cap rankings","ref":"Quant.Explorer.Providers.CoinGecko.html"},{"type":"module","title":"Rate Limits - Quant.Explorer.Providers.CoinGecko","doc":"CoinGecko API has the following rate limits:\n- Demo API: 10-30 calls/minute\n- Pro API: 500+ calls/minute","ref":"Quant.Explorer.Providers.CoinGecko.html#module-rate-limits"},{"type":"module","title":"Configuration - Quant.Explorer.Providers.CoinGecko","doc":"```elixir\nconfig :quant,\n  api_keys: %{\n    coin_gecko: \"your_api_key_here\"  # Optional for demo tier\n  }\n```","ref":"Quant.Explorer.Providers.CoinGecko.html#module-configuration"},{"type":"module","title":"Examples - Quant.Explorer.Providers.CoinGecko","doc":"# Get Bitcoin historical data\n    {:ok, df} = CoinGecko.history(\"bitcoin\", days: 30)\n\n    # Get current prices for multiple coins\n    {:ok, df} = CoinGecko.quote([\"bitcoin\", \"ethereum\", \"cardano\"])\n\n    # Search for coins\n    {:ok, df} = CoinGecko.search(\"chainlink\")\n\n    # Get coin information\n    {:ok, info} = CoinGecko.info(\"bitcoin\")","ref":"Quant.Explorer.Providers.CoinGecko.html#module-examples"},{"type":"function","title":"Quant.Explorer.Providers.CoinGecko.history/2","doc":"Fetches historical market data for a cryptocurrency.","ref":"Quant.Explorer.Providers.CoinGecko.html#history/2"},{"type":"function","title":"Options - Quant.Explorer.Providers.CoinGecko.history/2","doc":"- `:days` - Number of days of data to fetch (1, 7, 14, 30, 90, 180, 365, \"max\")\n- `:vs_currency` - Target currency (default: \"usd\")\n- `:interval` - Data interval (\"daily\" for > 1 day, \"hourly\" for <= 1 day)","ref":"Quant.Explorer.Providers.CoinGecko.html#history/2-options"},{"type":"function","title":"Examples - Quant.Explorer.Providers.CoinGecko.history/2","doc":"# Get Bitcoin data for last 30 days\n    {:ok, df} = CoinGecko.history(\"bitcoin\", days: 30)\n\n    # Get Ethereum data in EUR\n    {:ok, df} = CoinGecko.history(\"ethereum\", days: 7, vs_currency: \"eur\")","ref":"Quant.Explorer.Providers.CoinGecko.html#history/2-examples"},{"type":"function","title":"Quant.Explorer.Providers.CoinGecko.info/2","doc":"Fetches detailed information about a cryptocurrency.","ref":"Quant.Explorer.Providers.CoinGecko.html#info/2"},{"type":"function","title":"Examples - Quant.Explorer.Providers.CoinGecko.info/2","doc":"{:ok, info} = CoinGecko.info(\"bitcoin\")","ref":"Quant.Explorer.Providers.CoinGecko.html#info/2-examples"},{"type":"function","title":"Quant.Explorer.Providers.CoinGecko.quote/2","doc":"Fetches current market data for cryptocurrencies.","ref":"Quant.Explorer.Providers.CoinGecko.html#quote/2"},{"type":"function","title":"Examples - Quant.Explorer.Providers.CoinGecko.quote/2","doc":"# Single coin\n    {:ok, df} = CoinGecko.quote(\"bitcoin\")\n\n    # Multiple coins\n    {:ok, df} = CoinGecko.quote([\"bitcoin\", \"ethereum\"])","ref":"Quant.Explorer.Providers.CoinGecko.html#quote/2-examples"},{"type":"function","title":"Quant.Explorer.Providers.CoinGecko.search/2","doc":"Searches for cryptocurrencies by name or symbol.","ref":"Quant.Explorer.Providers.CoinGecko.html#search/2"},{"type":"function","title":"Examples - Quant.Explorer.Providers.CoinGecko.search/2","doc":"{:ok, df} = CoinGecko.search(\"bitcoin\")\n    {:ok, df} = CoinGecko.search(\"BTC\")","ref":"Quant.Explorer.Providers.CoinGecko.html#search/2-examples"},{"type":"function","title":"Quant.Explorer.Providers.CoinGecko.top_coins/1","doc":"Gets the top cryptocurrencies by market cap.","ref":"Quant.Explorer.Providers.CoinGecko.html#top_coins/1"},{"type":"function","title":"Options - Quant.Explorer.Providers.CoinGecko.top_coins/1","doc":"- `:vs_currency` - Target currency (default: \"usd\")\n- `:per_page` - Results per page (default: 100, max: 250)\n- `:page` - Page number (default: 1)\n- `:order` - Sort order (default: \"market_cap_desc\")","ref":"Quant.Explorer.Providers.CoinGecko.html#top_coins/1-options"},{"type":"function","title":"Examples - Quant.Explorer.Providers.CoinGecko.top_coins/1","doc":"{:ok, df} = CoinGecko.top_coins()\n    {:ok, df} = CoinGecko.top_coins(per_page: 50, vs_currency: \"eur\")","ref":"Quant.Explorer.Providers.CoinGecko.html#top_coins/1-examples"},{"type":"module","title":"Quant.Explorer.Providers.TwelveData","doc":"Twelve Data financial API provider.\n\nProvides access to comprehensive financial data including:\n- Stock historical data and real-time prices\n- Forex exchange rates\n- Cryptocurrency data\n- Technical indicators\n- Company fundamentals","ref":"Quant.Explorer.Providers.TwelveData.html"},{"type":"module","title":"Rate Limits - Quant.Explorer.Providers.TwelveData","doc":"Twelve Data API has the following rate limits:\n- Basic (Free): 8 requests per minute\n- Grow: 54 requests per minute\n- Pro: 164 requests per minute\n- Enterprise: Custom limits","ref":"Quant.Explorer.Providers.TwelveData.html#module-rate-limits"},{"type":"module","title":"Configuration - Quant.Explorer.Providers.TwelveData","doc":"API key is required for most endpoints:\n\n```elixir\nconfig :quant,\n  api_keys: %{\n    twelve_data: \"your_api_key_here\"\n  }\n```","ref":"Quant.Explorer.Providers.TwelveData.html#module-configuration"},{"type":"module","title":"Examples - Quant.Explorer.Providers.TwelveData","doc":"# Get Apple stock historical data\n    {:ok, df} = TwelveData.history(\"AAPL\", interval: \"1day\", outputsize: 30)\n\n    # Get real-time stock quote\n    {:ok, df} = TwelveData.quote(\"AAPL\")\n\n    # Search for stocks\n    {:ok, df} = TwelveData.search(\"Apple\")\n\n    # Get company profile\n    {:ok, info} = TwelveData.info(\"AAPL\")","ref":"Quant.Explorer.Providers.TwelveData.html#module-examples"},{"type":"function","title":"Quant.Explorer.Providers.TwelveData.forex_rate/2","doc":"Gets forex exchange rates.","ref":"Quant.Explorer.Providers.TwelveData.html#forex_rate/2"},{"type":"function","title":"Options - Quant.Explorer.Providers.TwelveData.forex_rate/2","doc":"- `:from` - Base currency (default: \"USD\")\n- `:to` - Target currency (default: \"EUR\")","ref":"Quant.Explorer.Providers.TwelveData.html#forex_rate/2-options"},{"type":"function","title":"Examples - Quant.Explorer.Providers.TwelveData.forex_rate/2","doc":"{:ok, df} = TwelveData.forex_rate(\"USD\", \"EUR\")\n    {:ok, df} = TwelveData.forex_rate([\"USD\", \"GBP\"], \"EUR\")","ref":"Quant.Explorer.Providers.TwelveData.html#forex_rate/2-examples"},{"type":"function","title":"Quant.Explorer.Providers.TwelveData.history/2","doc":"Fetches historical stock data.","ref":"Quant.Explorer.Providers.TwelveData.html#history/2"},{"type":"function","title":"Options - Quant.Explorer.Providers.TwelveData.history/2","doc":"- `:api_key` - Twelve Data API key (optional, will use config if not provided)\n- `:interval` - Time interval (\"1min\", \"5min\", \"15min\", \"30min\", \"45min\", \"1h\", \"2h\", \"4h\", \"1day\", \"1week\", \"1month\")\n- `:outputsize` - Number of data points (default: 30, max: 5000)\n- `:format` - Response format (default: \"json\")\n- `:country` - Country filter\n- `:exchange` - Exchange filter","ref":"Quant.Explorer.Providers.TwelveData.html#history/2-options"},{"type":"function","title":"Examples - Quant.Explorer.Providers.TwelveData.history/2","doc":"# Get Apple daily data for last 30 days\n    {:ok, df} = TwelveData.history(\"AAPL\", interval: \"1day\", outputsize: 30)\n\n    # Get intraday data\n    {:ok, df} = TwelveData.history(\"AAPL\", interval: \"5min\", outputsize: 100)\n\n    # With API key\n    {:ok, df} = TwelveData.history(\"AAPL\",\n      interval: \"1day\",\n      outputsize: 30,\n      api_key: \"YOUR_API_KEY\"\n    )","ref":"Quant.Explorer.Providers.TwelveData.html#history/2-examples"},{"type":"function","title":"Quant.Explorer.Providers.TwelveData.info/2","doc":"Fetches company profile and fundamental data.","ref":"Quant.Explorer.Providers.TwelveData.html#info/2"},{"type":"function","title":"Options - Quant.Explorer.Providers.TwelveData.info/2","doc":"- `:api_key` - Twelve Data API key (optional, will use config if not provided)","ref":"Quant.Explorer.Providers.TwelveData.html#info/2-options"},{"type":"function","title":"Examples - Quant.Explorer.Providers.TwelveData.info/2","doc":"{:ok, info} = TwelveData.info(\"AAPL\")\n    {:ok, info} = TwelveData.info(\"AAPL\", api_key: \"YOUR_API_KEY\")","ref":"Quant.Explorer.Providers.TwelveData.html#info/2-examples"},{"type":"function","title":"Quant.Explorer.Providers.TwelveData.quote/2","doc":"Fetches current market data for stocks.","ref":"Quant.Explorer.Providers.TwelveData.html#quote/2"},{"type":"function","title":"Options - Quant.Explorer.Providers.TwelveData.quote/2","doc":"- `:api_key` - Twelve Data API key (optional, will use config if not provided)","ref":"Quant.Explorer.Providers.TwelveData.html#quote/2-options"},{"type":"function","title":"Examples - Quant.Explorer.Providers.TwelveData.quote/2","doc":"# Single stock\n    {:ok, df} = TwelveData.quote(\"AAPL\")\n\n    # Multiple stocks\n    {:ok, df} = TwelveData.quote([\"AAPL\", \"MSFT\", \"GOOGL\"])\n\n    # With API key\n    {:ok, df} = TwelveData.quote(\"AAPL\", api_key: \"YOUR_API_KEY\")","ref":"Quant.Explorer.Providers.TwelveData.html#quote/2-examples"},{"type":"function","title":"Quant.Explorer.Providers.TwelveData.search/2","doc":"Searches for stocks by symbol or company name.","ref":"Quant.Explorer.Providers.TwelveData.html#search/2"},{"type":"function","title":"Options - Quant.Explorer.Providers.TwelveData.search/2","doc":"- `:api_key` - Twelve Data API key (optional, will use config if not provided)","ref":"Quant.Explorer.Providers.TwelveData.html#search/2-options"},{"type":"function","title":"Examples - Quant.Explorer.Providers.TwelveData.search/2","doc":"{:ok, df} = TwelveData.search(\"Apple\")\n    {:ok, df} = TwelveData.search(\"AAPL\", api_key: \"YOUR_API_KEY\")","ref":"Quant.Explorer.Providers.TwelveData.html#search/2-examples"},{"type":"module","title":"Quant.Explorer.Providers.YahooFinance","doc":"Yahoo Finance provider implementation.\n\nThis module provides access to Yahoo Finance data including:\n- Historical data (OHLCV) with multiple periods and intervals\n- Real-time quotes with streaming support\n- Company information and fundamentals\n- Symbol search functionality\n- Options data (advanced)\n\nAll data is returned as Explorer DataFrames for immediate analysis.","ref":"Quant.Explorer.Providers.YahooFinance.html"},{"type":"module","title":"Yahoo Finance API Endpoints - Quant.Explorer.Providers.YahooFinance","doc":"- Historical: `https://query1.finance.yahoo.com/v8/finance/chart/{symbol}`\n- Quote: `https://query1.finance.yahoo.com/v7/finance/quote?symbols={symbols}`\n- Search: `https://query1.finance.yahoo.com/v1/finance/search?q={query}`\n- Options: `https://query1.finance.yahoo.com/v7/finance/options/{symbol}`","ref":"Quant.Explorer.Providers.YahooFinance.html#module-yahoo-finance-api-endpoints"},{"type":"module","title":"Rate Limiting - Quant.Explorer.Providers.YahooFinance","doc":"Yahoo Finance has burst-tolerant rate limiting (around 100-200 requests/minute).\nUses the advanced rate limiter with burst allowance configuration.","ref":"Quant.Explorer.Providers.YahooFinance.html#module-rate-limiting"},{"type":"module","title":"Examples - Quant.Explorer.Providers.YahooFinance","doc":"# Historical data\n    {:ok, df} = YahooFinance.history(\"AAPL\", period: \"1y\", interval: \"1d\")\n\n    # Multiple symbols\n    {:ok, df} = YahooFinance.history([\"AAPL\", \"MSFT\"], period: \"1mo\")\n\n    # Real-time quotes\n    {:ok, df} = YahooFinance.quote([\"AAPL\", \"MSFT\", \"GOOGL\"])\n\n    # Company information\n    {:ok, info} = YahooFinance.info(\"AAPL\")\n\n    # Symbol search\n    {:ok, df} = YahooFinance.search(\"Apple\")\n\n    # Streaming historical data (large datasets)\n    stream = YahooFinance.history_stream(\"AAPL\", period: \"max\", interval: \"1d\")\n    df = stream |> Enum.to_list() |> Explorer.DataFrame.concat_rows()","ref":"Quant.Explorer.Providers.YahooFinance.html#module-examples"},{"type":"type","title":"Quant.Explorer.Providers.YahooFinance.interval/0","doc":"","ref":"Quant.Explorer.Providers.YahooFinance.html#t:interval/0"},{"type":"type","title":"Quant.Explorer.Providers.YahooFinance.options/0","doc":"","ref":"Quant.Explorer.Providers.YahooFinance.html#t:options/0"},{"type":"type","title":"Quant.Explorer.Providers.YahooFinance.period/0","doc":"","ref":"Quant.Explorer.Providers.YahooFinance.html#t:period/0"},{"type":"type","title":"Quant.Explorer.Providers.YahooFinance.symbol/0","doc":"","ref":"Quant.Explorer.Providers.YahooFinance.html#t:symbol/0"},{"type":"type","title":"Quant.Explorer.Providers.YahooFinance.symbols/0","doc":"","ref":"Quant.Explorer.Providers.YahooFinance.html#t:symbols/0"},{"type":"function","title":"Quant.Explorer.Providers.YahooFinance.history_stream/2","doc":"Returns a stream of historical data for large datasets.\n\nUseful for fetching max period data or when working with multiple intervals.\nEach chunk is a DataFrame that can be processed independently or combined.","ref":"Quant.Explorer.Providers.YahooFinance.html#history_stream/2"},{"type":"function","title":"Quant.Explorer.Providers.YahooFinance.options/2","doc":"Fetches options chain data for a symbol.\n\nReturns both calls and puts with various expiration dates.","ref":"Quant.Explorer.Providers.YahooFinance.html#options/2"},{"type":"module","title":"Quant.Explorer.RateLimiter","doc":"Advanced rate limiter with pluggable backends and provider-specific configurations.\n\nThis module provides a high-level interface for rate limiting that supports:\n- Multiple backends (ETS, Redis, GenServer)\n- Provider-specific rate limiting patterns\n- Complex algorithms (sliding window, token bucket, weighted requests)\n- Distributed rate limiting capabilities","ref":"Quant.Explorer.RateLimiter.html"},{"type":"module","title":"Usage - Quant.Explorer.RateLimiter","doc":"# Basic usage with default backend\n    {:ok, _} = Quant.Explorer.RateLimiter.start_link()\n\n    # Check and consume rate limit\n    case Quant.Explorer.RateLimiter.check_and_consume(:yahoo_finance, :history) do\n      :ok ->\n        # Request allowed, proceed\n      {:error, :rate_limited} ->\n        # Rate limited, wait or handle error\n    end\n\n    # Check limit without consuming\n    case Quant.Explorer.RateLimiter.check_limit(:binance, :klines, weight: 5) do\n      :ok -> # Would be allowed\n      {:error, :rate_limited} -> # Would be rate limited\n    end","ref":"Quant.Explorer.RateLimiter.html#module-usage"},{"type":"function","title":"Quant.Explorer.RateLimiter.check_and_consume/3","doc":"Checks if a request is allowed and consumes the rate limit if so.\n\nThis is the main function to use for rate limiting API requests.","ref":"Quant.Explorer.RateLimiter.html#check_and_consume/3"},{"type":"function","title":"Quant.Explorer.RateLimiter.check_limit/3","doc":"Checks if a request would be allowed without consuming the limit.","ref":"Quant.Explorer.RateLimiter.html#check_limit/3"},{"type":"function","title":"Quant.Explorer.RateLimiter.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Quant.Explorer.RateLimiter.html#child_spec/1"},{"type":"function","title":"Quant.Explorer.RateLimiter.consume_limit/3","doc":"Consumes a rate limit without checking (for external request tracking).","ref":"Quant.Explorer.RateLimiter.html#consume_limit/3"},{"type":"function","title":"Quant.Explorer.RateLimiter.get_limit_status/2","doc":"Gets the current rate limit status for a provider/endpoint.","ref":"Quant.Explorer.RateLimiter.html#get_limit_status/2"},{"type":"function","title":"Quant.Explorer.RateLimiter.get_stats/1","doc":"Gets rate limiting statistics.","ref":"Quant.Explorer.RateLimiter.html#get_stats/1"},{"type":"function","title":"Quant.Explorer.RateLimiter.reset_limits/2","doc":"Resets rate limits for a provider/endpoint.","ref":"Quant.Explorer.RateLimiter.html#reset_limits/2"},{"type":"function","title":"Quant.Explorer.RateLimiter.start_link/1","doc":"Starts the rate limiter with the specified backend.","ref":"Quant.Explorer.RateLimiter.html#start_link/1"},{"type":"function","title":"Quant.Explorer.RateLimiter.wait_for_rate_limit/3","doc":"Waits until a request is allowed, with exponential backoff.","ref":"Quant.Explorer.RateLimiter.html#wait_for_rate_limit/3"},{"type":"behaviour","title":"Quant.Explorer.RateLimiting.Behaviour","doc":"Behaviour for rate limiting backends.\n\nThis behaviour defines a flexible interface for rate limiting that can support\nvarious algorithms and backends (ETS, Redis, GenServer, etc.) and different\nprovider-specific requirements.","ref":"Quant.Explorer.RateLimiting.Behaviour.html"},{"type":"behaviour","title":"Supported Rate Limiting Patterns - Quant.Explorer.RateLimiting.Behaviour","doc":"","ref":"Quant.Explorer.RateLimiting.Behaviour.html#module-supported-rate-limiting-patterns"},{"type":"behaviour","title":"Simple Rate Limiting - Quant.Explorer.RateLimiting.Behaviour","doc":"- Fixed window: N requests per time window\n- Sliding window: N requests in any sliding time window\n- Token bucket: Consume tokens at variable rates","ref":"Quant.Explorer.RateLimiting.Behaviour.html#module-simple-rate-limiting"},{"type":"behaviour","title":"Provider-Specific Patterns - Quant.Explorer.RateLimiting.Behaviour","doc":"- **Binance**: Weight-based requests (different endpoints have different weights)\n- **Yahoo Finance**: IP-based limits with burst allowance\n- **Alpha Vantage**: API key-based with daily/monthly quotas\n- **CoinGecko**: Tiered limits based on API plan","ref":"Quant.Explorer.RateLimiting.Behaviour.html#module-provider-specific-patterns"},{"type":"behaviour","title":"Rate Limit Types - Quant.Explorer.RateLimiting.Behaviour","doc":"- `:requests_per_minute` - Standard RPM limit\n- `:requests_per_second` - High-frequency limit\n- `:requests_per_hour` - Hourly quotas\n- `:requests_per_day` - Daily quotas\n- `:weighted_requests` - Weight-based limiting (Binance style)\n- `:burst_allowance` - Allow bursts with recovery","ref":"Quant.Explorer.RateLimiting.Behaviour.html#module-rate-limit-types"},{"type":"type","title":"Quant.Explorer.RateLimiting.Behaviour.endpoint/0","doc":"","ref":"Quant.Explorer.RateLimiting.Behaviour.html#t:endpoint/0"},{"type":"type","title":"Quant.Explorer.RateLimiting.Behaviour.limit_config/0","doc":"","ref":"Quant.Explorer.RateLimiting.Behaviour.html#t:limit_config/0"},{"type":"type","title":"Quant.Explorer.RateLimiting.Behaviour.limit_type/0","doc":"","ref":"Quant.Explorer.RateLimiting.Behaviour.html#t:limit_type/0"},{"type":"type","title":"Quant.Explorer.RateLimiting.Behaviour.provider/0","doc":"","ref":"Quant.Explorer.RateLimiting.Behaviour.html#t:provider/0"},{"type":"type","title":"Quant.Explorer.RateLimiting.Behaviour.rate_limit_result/0","doc":"","ref":"Quant.Explorer.RateLimiting.Behaviour.html#t:rate_limit_result/0"},{"type":"type","title":"Quant.Explorer.RateLimiting.Behaviour.remaining_info/0","doc":"","ref":"Quant.Explorer.RateLimiting.Behaviour.html#t:remaining_info/0"},{"type":"type","title":"Quant.Explorer.RateLimiting.Behaviour.request_info/0","doc":"","ref":"Quant.Explorer.RateLimiting.Behaviour.html#t:request_info/0"},{"type":"type","title":"Quant.Explorer.RateLimiting.Behaviour.weight/0","doc":"","ref":"Quant.Explorer.RateLimiting.Behaviour.html#t:weight/0"},{"type":"callback","title":"Quant.Explorer.RateLimiting.Behaviour.check_and_consume/3","doc":"Checks if a request is allowed and records it if so.\n\nThis is the primary function that combines check and record operations\nfor atomic rate limiting.","ref":"Quant.Explorer.RateLimiting.Behaviour.html#c:check_and_consume/3"},{"type":"callback","title":"Quant.Explorer.RateLimiting.Behaviour.check_limit/3","doc":"Checks if a request would be allowed without consuming the limit.\n\nUseful for pre-flight checks or API exploration.","ref":"Quant.Explorer.RateLimiting.Behaviour.html#c:check_limit/3"},{"type":"callback","title":"Quant.Explorer.RateLimiting.Behaviour.cleanup/1","doc":"Cleans up expired entries and performs maintenance.","ref":"Quant.Explorer.RateLimiting.Behaviour.html#c:cleanup/1"},{"type":"callback","title":"Quant.Explorer.RateLimiting.Behaviour.consume_limit/3","doc":"Records a request consumption without checking.\n\nUseful for tracking requests made outside the normal flow.","ref":"Quant.Explorer.RateLimiting.Behaviour.html#c:consume_limit/3"},{"type":"callback","title":"Quant.Explorer.RateLimiting.Behaviour.get_limit_status/3","doc":"Gets current limit status for a provider/endpoint combination.","ref":"Quant.Explorer.RateLimiting.Behaviour.html#c:get_limit_status/3"},{"type":"callback","title":"Quant.Explorer.RateLimiting.Behaviour.get_stats/2","doc":"Returns statistics about rate limiting (requests, violations, etc.).","ref":"Quant.Explorer.RateLimiting.Behaviour.html#c:get_stats/2"},{"type":"callback","title":"Quant.Explorer.RateLimiting.Behaviour.init/1","doc":"Initializes the rate limiter backend.\n\nReturns `{:ok, state}` on success, `{:error, reason}` on failure.","ref":"Quant.Explorer.RateLimiting.Behaviour.html#c:init/1"},{"type":"callback","title":"Quant.Explorer.RateLimiting.Behaviour.reset_limits/3","doc":"Resets limits for a provider/endpoint (useful for testing or admin operations).","ref":"Quant.Explorer.RateLimiting.Behaviour.html#c:reset_limits/3"},{"type":"callback","title":"Quant.Explorer.RateLimiting.Behaviour.setup_distributed/2","doc":"Sets up distributed coordination (for Redis, etc.).","ref":"Quant.Explorer.RateLimiting.Behaviour.html#c:setup_distributed/2"},{"type":"callback","title":"Quant.Explorer.RateLimiting.Behaviour.update_config/2","doc":"Handles backend-specific configuration updates.","ref":"Quant.Explorer.RateLimiting.Behaviour.html#c:update_config/2"},{"type":"function","title":"Quant.Explorer.RateLimiting.Behaviour.limit_config/3","doc":"Helper function to create rate limit configurations.","ref":"Quant.Explorer.RateLimiting.Behaviour.html#limit_config/3"},{"type":"function","title":"Quant.Explorer.RateLimiting.Behaviour.request_info/3","doc":"Helper function to create a basic request info structure.","ref":"Quant.Explorer.RateLimiting.Behaviour.html#request_info/3"},{"type":"module","title":"Quant.Explorer.RateLimiting.EtsBackend","doc":"ETS-based rate limiting backend implementation.\n\nThis backend uses ETS tables for high-performance, local rate limiting.\nIt supports multiple rate limiting algorithms and provides automatic\ncleanup of expired entries.","ref":"Quant.Explorer.RateLimiting.EtsBackend.html"},{"type":"module","title":"Features - Quant.Explorer.RateLimiting.EtsBackend","doc":"- Multiple rate limiting algorithms (sliding window, token bucket, weighted)\n- Automatic cleanup of expired data\n- Statistics tracking\n- High performance with ETS","ref":"Quant.Explorer.RateLimiting.EtsBackend.html#module-features"},{"type":"module","title":"Quant.Explorer.RateLimiting.ProviderConfig","doc":"Provider-specific rate limiting configurations.\n\nThis module contains rate limiting configurations tailored to specific\nfinancial data providers, handling their unique requirements and patterns.","ref":"Quant.Explorer.RateLimiting.ProviderConfig.html"},{"type":"function","title":"Quant.Explorer.RateLimiting.ProviderConfig.calculate_binance_weight/2","doc":"Calculates the appropriate weight for a Binance request based on parameters.\n\nDifferent Binance endpoints have different weight calculations:\n- Single symbol requests: weight 1\n- All symbols requests: weight 40+\n- Depth with limit: weight based on limit parameter","ref":"Quant.Explorer.RateLimiting.ProviderConfig.html#calculate_binance_weight/2"},{"type":"function","title":"Quant.Explorer.RateLimiting.ProviderConfig.get_endpoint_config/2","doc":"Gets the rate limiting configuration for a specific provider endpoint.","ref":"Quant.Explorer.RateLimiting.ProviderConfig.html#get_endpoint_config/2"},{"type":"function","title":"Quant.Explorer.RateLimiting.ProviderConfig.get_premium_config/1","doc":"Gets adjusted limits for premium/pro tiers.","ref":"Quant.Explorer.RateLimiting.ProviderConfig.html#get_premium_config/1"},{"type":"function","title":"Quant.Explorer.RateLimiting.ProviderConfig.get_provider_config/1","doc":"Gets the rate limiting configuration for a specific provider.","ref":"Quant.Explorer.RateLimiting.ProviderConfig.html#get_provider_config/1"},{"type":"function","title":"Quant.Explorer.RateLimiting.ProviderConfig.should_use_premium_limits?/2","doc":"Determines if a request should use a higher tier configuration.\n\nThis can be based on API key tier, user subscription, etc.","ref":"Quant.Explorer.RateLimiting.ProviderConfig.html#should_use_premium_limits?/2"},{"type":"module","title":"Quant.Explorer.SchemaStandardizer","doc":"Comprehensive schema standardization for financial data analysis.\n\nThis module provides unified parameter handling and output schema standardization\nacross all providers to ensure complete interoperability for financial analysis.","ref":"Quant.Explorer.SchemaStandardizer.html"},{"type":"module","title":"Design Principles - Quant.Explorer.SchemaStandardizer","doc":"1. **Universal Parameters**: All providers accept the same parameter names\n2. **Automatic Translation**: Provider-specific parameters are translated internally\n3. **Consistent Output**: All DataFrames have identical schemas regardless of provider\n4. **Type Safety**: Strong typing and validation for all fields\n5. **Timezone Handling**: All timestamps normalized to UTC with timezone info","ref":"Quant.Explorer.SchemaStandardizer.html#module-design-principles"},{"type":"function","title":"Quant.Explorer.SchemaStandardizer.standardize_history_schema/2","doc":"Standardizes historical data DataFrame to consistent schema.","ref":"Quant.Explorer.SchemaStandardizer.html#standardize_history_schema/2"},{"type":"function","title":"Standard Historical Data Schema - Quant.Explorer.SchemaStandardizer.standardize_history_schema/2","doc":"- `symbol` (string): Stock/crypto symbol\n- `timestamp` (datetime): UTC timestamp with timezone info\n- `open` (f64): Opening price\n- `high` (f64): Highest price\n- `low` (f64): Lowest price\n- `close` (f64): Closing price\n- `volume` (s64): Trading volume\n- `adj_close` (f64): Adjusted closing price (when available)\n- `market_cap` (f64): Market capitalization (crypto only)\n- `provider` (string): Data source provider\n- `currency` (string): Price currency\n- `timezone` (string): Original timezone","ref":"Quant.Explorer.SchemaStandardizer.html#standardize_history_schema/2-standard-historical-data-schema"},{"type":"function","title":"Quant.Explorer.SchemaStandardizer.standardize_params/2","doc":"Standardizes query parameters across all providers.","ref":"Quant.Explorer.SchemaStandardizer.html#standardize_params/2"},{"type":"function","title":"Standard Parameters - Quant.Explorer.SchemaStandardizer.standardize_params/2","doc":"- `:interval` - Time interval: \"1m\", \"5m\", \"15m\", \"30m\", \"1h\", \"1d\", \"1w\", \"1mo\"\n- `:period` - Time period: \"1d\", \"5d\", \"1mo\", \"3mo\", \"6mo\", \"1y\", \"2y\", \"5y\", \"10y\", \"max\"\n- `:limit` - Number of data points to return (integer)\n- `:start_date` - Start date (Date, DateTime, or ISO string)\n- `:end_date` - End date (Date, DateTime, or ISO string)\n- `:currency` - Base currency for crypto quotes: \"usd\", \"eur\", \"btc\", \"eth\"\n- `:adjusted` - Whether to use adjusted prices (boolean, default: true)\n- `:api_key` - API key for authentication","ref":"Quant.Explorer.SchemaStandardizer.html#standardize_params/2-standard-parameters"},{"type":"function","title":"Returns - Quant.Explorer.SchemaStandardizer.standardize_params/2","doc":"`{:ok, standardized_params}` or `{:error, reason}`","ref":"Quant.Explorer.SchemaStandardizer.html#standardize_params/2-returns"},{"type":"function","title":"Quant.Explorer.SchemaStandardizer.standardize_quote_schema/2","doc":"Standardizes quote data DataFrame to consistent schema.","ref":"Quant.Explorer.SchemaStandardizer.html#standardize_quote_schema/2"},{"type":"function","title":"Standard Quote Data Schema - Quant.Explorer.SchemaStandardizer.standardize_quote_schema/2","doc":"- `symbol` (string): Stock/crypto symbol\n- `price` (f64): Current price\n- `change` (f64): Absolute price change\n- `change_percent` (f64): Percentage change\n- `volume` (s64): Current/24h volume\n- `high_24h` (f64): 24-hour high price\n- `low_24h` (f64): 24-hour low price\n- `market_cap` (f64): Market capitalization (when available)\n- `timestamp` (datetime): UTC timestamp\n- `provider` (string): Data source provider\n- `currency` (string): Quote currency\n- `market_state` (string): Market state (open/closed/pre/post)","ref":"Quant.Explorer.SchemaStandardizer.html#standardize_quote_schema/2-standard-quote-data-schema"},{"type":"function","title":"Quant.Explorer.SchemaStandardizer.standardize_search_schema/2","doc":"Standardizes search results DataFrame to consistent schema.","ref":"Quant.Explorer.SchemaStandardizer.html#standardize_search_schema/2"},{"type":"function","title":"Standard Search Results Schema - Quant.Explorer.SchemaStandardizer.standardize_search_schema/2","doc":"- `symbol` (string): Trading symbol\n- `name` (string): Full company/asset name\n- `type` (string): Asset type (stock, etf, crypto, forex, index)\n- `exchange` (string): Primary exchange\n- `currency` (string): Trading currency\n- `country` (string): Country/region\n- `sector` (string): Business sector (when available)\n- `industry` (string): Industry classification (when available)\n- `market_cap` (f64): Market capitalization (when available)\n- `provider` (string): Data source provider\n- `match_score` (f64): Search relevance score (0.0 - 1.0)","ref":"Quant.Explorer.SchemaStandardizer.html#standardize_search_schema/2-standard-search-results-schema"},{"type":"function","title":"Quant.Explorer.SchemaStandardizer.supported_currencies/0","doc":"Lists all supported currencies.","ref":"Quant.Explorer.SchemaStandardizer.html#supported_currencies/0"},{"type":"function","title":"Quant.Explorer.SchemaStandardizer.supported_intervals/0","doc":"Lists all supported standard intervals.","ref":"Quant.Explorer.SchemaStandardizer.html#supported_intervals/0"},{"type":"function","title":"Quant.Explorer.SchemaStandardizer.supported_periods/0","doc":"Lists all supported standard periods.","ref":"Quant.Explorer.SchemaStandardizer.html#supported_periods/0"},{"type":"function","title":"Quant.Explorer.SchemaStandardizer.validate_provider_support/2","doc":"Validates parameter compatibility with provider.","ref":"Quant.Explorer.SchemaStandardizer.html#validate_provider_support/2"},{"type":"module","title":"Quant.Math","doc":"Mathematical utilities for financial data analysis.\n\nThis module serves as the main entry point for technical indicators and\nmathematical operations that work with Explorer DataFrames. All operations\nare optimized using NX tensors internally while maintaining a DataFrame-first API.","ref":"Quant.Math.html"},{"type":"module","title":"Architecture - Quant.Math","doc":"The module is organized into specialized submodules:\n\n- `Quant.Math.MovingAverages` - Various moving average indicators (SMA, EMA, WMA, etc.)\n- `Quant.Math.Oscillators` - Momentum and oscillator indicators (MACD, RSI, etc.)\n- `Quant.Math.Trend` - Trend analysis indicators (ADX, Parabolic SAR, etc.) - *Coming soon*\n- `Quant.Math.Volatility` - Volatility indicators (Bollinger Bands, ATR, etc.) - *Coming soon*\n- `Quant.Math.Volume` - Volume-based indicators (OBV, VWAP, MFI, etc.) - *Coming soon*\n- `Quant.Math.Utils` - Shared utility functions for mathematical operations","ref":"Quant.Math.html#module-architecture"},{"type":"module","title":"Features - Quant.Math","doc":"- **DataFrame-first API** that supports method chaining\n- **Efficient rolling operations** using NX tensors internally\n- **Proper handling of NaN/missing data** according to financial standards\n- **Configurable column naming and validation**\n- **Modular architecture** for easy extension and maintenance","ref":"Quant.Math.html#module-features"},{"type":"module","title":"Usage - Quant.Math","doc":"All functions can be called directly from this module through delegation:\n\n    # Simple Moving Average\n    df |> Quant.Math.add_sma!(:close, period: 20)\n\n    # Method chaining for multiple indicators\n    df\n    |> Quant.Math.add_sma!(:close, period: 20, name: \"sma_20\")\n    |> Quant.Math.add_sma!(:close, period: 50, name: \"sma_50\")\n\nOr accessed directly through the specialized submodules:\n\n    # Direct access to MovingAverages module\n    df |> Quant.Math.MovingAverages.add_sma!(:close, period: 20)","ref":"Quant.Math.html#module-usage"},{"type":"module","title":"Adding New Indicators - Quant.Math","doc":"When adding new indicators, follow this pattern:\n\n1. Create or extend the appropriate submodule\n2. Add a delegation in this main module\n3. Follow the consistent API pattern with DataFrame input/output\n4. Use shared utilities from `Quant.Math.Utils`","ref":"Quant.Math.html#module-adding-new-indicators"},{"type":"type","title":"Quant.Math.ema_opts/0","doc":"","ref":"Quant.Math.html#t:ema_opts/0"},{"type":"type","title":"Quant.Math.name_option/0","doc":"","ref":"Quant.Math.html#t:name_option/0"},{"type":"type","title":"Quant.Math.nan_policy/0","doc":"","ref":"Quant.Math.html#t:nan_policy/0"},{"type":"type","title":"Quant.Math.period_option/0","doc":"","ref":"Quant.Math.html#t:period_option/0"},{"type":"type","title":"Quant.Math.sma_opts/0","doc":"","ref":"Quant.Math.html#t:sma_opts/0"},{"type":"function","title":"Quant.Math.add_dema!/3","doc":"Add Double Exponential Moving Average (DEMA) to a DataFrame.\n\nDelegates to `Quant.Math.MovingAverages.add_dema!/3`.\n\nSee `Quant.Math.MovingAverages.add_dema!/3` for detailed documentation.","ref":"Quant.Math.html#add_dema!/3"},{"type":"function","title":"Quick Example - Quant.Math.add_dema!/3","doc":"iex> df = Explorer.DataFrame.new(%{close: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]})\n    iex> result = Quant.Math.add_dema!(df, :close, period: 4)\n    iex> \"close_dema_4\" in Map.keys(result.dtypes)\n    true","ref":"Quant.Math.html#add_dema!/3-quick-example"},{"type":"function","title":"Quant.Math.add_ema!/3","doc":"Add Exponential Moving Average (EMA) to a DataFrame.\n\nDelegates to `Quant.Math.MovingAverages.add_ema!/3`.\n\nSee `Quant.Math.MovingAverages.add_ema!/3` for detailed documentation.","ref":"Quant.Math.html#add_ema!/3"},{"type":"function","title":"Quick Example - Quant.Math.add_ema!/3","doc":"iex> df = Explorer.DataFrame.new(%{close: [1.0, 2.0, 3.0, 4.0, 5.0]})\n    iex> result = Quant.Math.add_ema!(df, :close, period: 3)\n    iex> \"close_ema_3\" in Map.keys(result.dtypes)\n    true","ref":"Quant.Math.html#add_ema!/3-quick-example"},{"type":"function","title":"Quant.Math.add_hma!/3","doc":"Add Hull Moving Average (HMA) to a DataFrame.\n\nDelegates to `Quant.Math.MovingAverages.add_hma!/3`.\n\nSee `Quant.Math.MovingAverages.add_hma!/3` for detailed documentation.","ref":"Quant.Math.html#add_hma!/3"},{"type":"function","title":"Quick Example - Quant.Math.add_hma!/3","doc":"iex> df = Explorer.DataFrame.new(%{close: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]})\n    iex> result = Quant.Math.add_hma!(df, :close, period: 4)\n    iex> \"close_hma_4\" in Map.keys(result.dtypes)\n    true","ref":"Quant.Math.html#add_hma!/3-quick-example"},{"type":"function","title":"Quant.Math.add_kama!/3","doc":"Add Kaufman Adaptive Moving Average (KAMA) to a DataFrame.\n\nDelegates to `Quant.Math.MovingAverages.add_kama!/3`.\n\nSee `Quant.Math.MovingAverages.add_kama!/3` for detailed documentation.","ref":"Quant.Math.html#add_kama!/3"},{"type":"function","title":"Quick Example - Quant.Math.add_kama!/3","doc":"iex> df = Explorer.DataFrame.new(%{close: [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]})\n    iex> result = Quant.Math.add_kama!(df, :close, period: 10)\n    iex> \"close_kama_10\" in Map.keys(result.dtypes)\n    true","ref":"Quant.Math.html#add_kama!/3-quick-example"},{"type":"function","title":"Quant.Math.add_macd!/3","doc":"Add MACD (Moving Average Convergence Divergence) to a DataFrame.\n\nMACD is a trend-following momentum indicator that shows the relationship between\ntwo moving averages of a security's price. Calculates MACD line, Signal line, and Histogram.\n\nDelegates to `Quant.Math.Oscillators.add_macd!/3`.\n\nSee `Quant.Math.Oscillators.add_macd!/3` for detailed documentation.","ref":"Quant.Math.html#add_macd!/3"},{"type":"function","title":"Quick Example - Quant.Math.add_macd!/3","doc":"iex> df = Explorer.DataFrame.new(%{close: [10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0]})\n    iex> result = Quant.Math.add_macd!(df, :close, fast_period: 5, slow_period: 8, signal_period: 3)\n    iex> column_names = Explorer.DataFrame.names(result)\n    iex> \"close_macd_5_8\" in column_names and \"close_signal_3\" in column_names\n    true","ref":"Quant.Math.html#add_macd!/3-quick-example"},{"type":"function","title":"Quant.Math.add_rsi!/3","doc":"Add RSI (Relative Strength Index) to a DataFrame.\n\nRSI is a momentum oscillator that measures the speed and change of price movements.\nIt oscillates between 0 and 100 and is typically used to identify overbought and\noversold conditions in a security.\n\nDelegates to `Quant.Math.Oscillators.add_rsi!/3`.\n\nSee `Quant.Math.Oscillators.add_rsi!/3` for detailed documentation.","ref":"Quant.Math.html#add_rsi!/3"},{"type":"function","title":"Quick Example - Quant.Math.add_rsi!/3","doc":"iex> df = Explorer.DataFrame.new(%{close: [44.0, 44.3, 44.1, 44.2, 44.5, 43.4, 44.0, 44.25, 44.8, 45.1, 45.4, 45.8, 46.0, 45.9, 45.2]})\n    iex> result = Quant.Math.add_rsi!(df, :close, period: 14)\n    iex> \"close_rsi_14\" in Explorer.DataFrame.names(result)\n    true","ref":"Quant.Math.html#add_rsi!/3-quick-example"},{"type":"function","title":"Quant.Math.add_sma!/3","doc":"Add Simple Moving Average (SMA) to a DataFrame.\n\nDelegates to `Quant.Math.MovingAverages.add_sma!/3`.\n\nSee `Quant.Math.MovingAverages.add_sma!/3` for detailed documentation.","ref":"Quant.Math.html#add_sma!/3"},{"type":"function","title":"Quick Example - Quant.Math.add_sma!/3","doc":"iex> df = Explorer.DataFrame.new(%{close: [1.0, 2.0, 3.0, 4.0, 5.0]})\n    iex> result = Quant.Math.add_sma!(df, :close, period: 3)\n    iex> \"close_sma_3\" in Map.keys(result.dtypes)\n    true","ref":"Quant.Math.html#add_sma!/3-quick-example"},{"type":"function","title":"Quant.Math.add_tema!/3","doc":"Add Triple Exponential Moving Average (TEMA) to a DataFrame.\n\nDelegates to `Quant.Math.MovingAverages.add_tema!/3`.\n\nSee `Quant.Math.MovingAverages.add_tema!/3` for detailed documentation.","ref":"Quant.Math.html#add_tema!/3"},{"type":"function","title":"Quick Example - Quant.Math.add_tema!/3","doc":"iex> df = Explorer.DataFrame.new(%{close: [10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0]})\n    iex> result = Quant.Math.add_tema!(df, :close, period: 3)\n    iex> \"close_tema_3\" in Map.keys(result.dtypes)\n    true","ref":"Quant.Math.html#add_tema!/3-quick-example"},{"type":"function","title":"Quant.Math.add_wma!/3","doc":"Add Weighted Moving Average (WMA) to a DataFrame.\n\nDelegates to `Quant.Math.MovingAverages.add_wma!/3`.\n\nSee `Quant.Math.MovingAverages.add_wma!/3` for detailed documentation.","ref":"Quant.Math.html#add_wma!/3"},{"type":"function","title":"Quick Example - Quant.Math.add_wma!/3","doc":"iex> df = Explorer.DataFrame.new(%{close: [10, 12, 14, 16, 18, 20]})\n    iex> result = Quant.Math.add_wma!(df, :close, period: 3)\n    iex> \"close_wma_3\" in Map.keys(result.dtypes)\n    true","ref":"Quant.Math.html#add_wma!/3-quick-example"},{"type":"function","title":"Quant.Math.analyze_ma_results!/2","doc":"Analyze moving average results in a DataFrame.\n\nDelegates to `Quant.Math.MovingAverages.analyze_ma_results!/2`.\n\nThis helper function provides insights into moving average calculations,\nespecially useful for understanding NaN values that appear before\nsufficient data points are available.","ref":"Quant.Math.html#analyze_ma_results!/2"},{"type":"function","title":"Quick Example - Quant.Math.analyze_ma_results!/2","doc":"iex> df = Explorer.DataFrame.new(%{close: [1.0, 2.0, 3.0, 4.0, 5.0]})\n    iex> result = Quant.Math.add_sma!(df, :close, period: 3)\n    iex> info = Quant.Math.analyze_ma_results!(result, \"close_sma_3\")\n    iex> info.nan_count\n    2","ref":"Quant.Math.html#analyze_ma_results!/2-quick-example"},{"type":"function","title":"Quant.Math.detect_macd_crossovers/4","doc":"Detect MACD crossovers in a DataFrame.\n\nIdentifies bullish and bearish crossovers between MACD line and Signal line.\n\nDelegates to `Quant.Math.Oscillators.detect_macd_crossovers/4`.\n\nSee `Quant.Math.Oscillators.detect_macd_crossovers/4` for detailed documentation.","ref":"Quant.Math.html#detect_macd_crossovers/4"},{"type":"function","title":"Quick Example - Quant.Math.detect_macd_crossovers/4","doc":"iex> df = Explorer.DataFrame.new(%{macd: [0.1, -0.1], signal: [-0.1, 0.1]})\n    iex> result = Quant.Math.detect_macd_crossovers(df, \"macd\", \"signal\")\n    iex> \"macd_crossover\" in Explorer.DataFrame.names(result)\n    true","ref":"Quant.Math.html#detect_macd_crossovers/4-quick-example"},{"type":"function","title":"Quant.Math.rsi_signals/3","doc":"Identify RSI overbought and oversold conditions.\n\nAnalyzes RSI values to identify potential trading signals based on traditional\noverbought (>70) and oversold (<30) levels.\n\nDelegates to `Quant.Math.Oscillators.rsi_signals/3`.\n\nSee `Quant.Math.Oscillators.rsi_signals/3` for detailed documentation.","ref":"Quant.Math.html#rsi_signals/3"},{"type":"function","title":"Quick Example - Quant.Math.rsi_signals/3","doc":"iex> df = Explorer.DataFrame.new(%{rsi: [20, 40, 60, 80, 50, 25, 75]})\n    iex> result = Quant.Math.rsi_signals(df, \"rsi\")\n    iex> \"rsi_signal\" in Explorer.DataFrame.names(result)\n    true","ref":"Quant.Math.html#rsi_signals/3-quick-example"},{"type":"module","title":"Quant.Math.MovingAverages","doc":"Moving Average technical indicators.\n\nThis module implements various moving average calculations including:\n- Simple Moving Average (SMA)\n- Exponential Moving Average (EMA) - Coming soon\n- Weighted Moving Average (WMA) - Coming soon\n- Hull Moving Average (HMA) - Coming soon\n\nAll functions work with Explorer DataFrames and use NX tensors internally\nfor high-performance calculations.","ref":"Quant.Math.MovingAverages.html"},{"type":"type","title":"Quant.Math.MovingAverages.ema_opts/0","doc":"","ref":"Quant.Math.MovingAverages.html#t:ema_opts/0"},{"type":"type","title":"Quant.Math.MovingAverages.name_option/0","doc":"","ref":"Quant.Math.MovingAverages.html#t:name_option/0"},{"type":"type","title":"Quant.Math.MovingAverages.nan_policy/0","doc":"","ref":"Quant.Math.MovingAverages.html#t:nan_policy/0"},{"type":"type","title":"Quant.Math.MovingAverages.period_option/0","doc":"","ref":"Quant.Math.MovingAverages.html#t:period_option/0"},{"type":"type","title":"Quant.Math.MovingAverages.sma_opts/0","doc":"","ref":"Quant.Math.MovingAverages.html#t:sma_opts/0"},{"type":"function","title":"Quant.Math.MovingAverages.add_dema!/3","doc":"Add Double Exponential Moving Average (DEMA) to a DataFrame.\n\nThe Double Exponential Moving Average was developed by Patrick Mulloy to reduce the lag\ninherent in traditional exponential moving averages by applying double smoothing.","ref":"Quant.Math.MovingAverages.html#add_dema!/3"},{"type":"function","title":"Algorithm - Quant.Math.MovingAverages.add_dema!/3","doc":"1. Calculate EMA(period) of the price data (EMA1)\n2. Calculate EMA(period) of EMA1 (EMA2)\n3. DEMA = 2 × EMA1 - EMA2","ref":"Quant.Math.MovingAverages.html#add_dema!/3-algorithm"},{"type":"function","title":"Parameters - Quant.Math.MovingAverages.add_dema!/3","doc":"- `df` - Explorer DataFrame containing price data\n- `price_column` - Name of the column containing prices (default: :close)\n- `options` - Keyword list with the following options:\n  - `:period` - DEMA period (required, positive integer)\n  - `:column_name` - Name for the DEMA column (default: \"dema_N\" where N is period)\n  - `:alpha` - Optional smoothing factor. If not provided, uses 2/(period+1)\n  - `:validate` - Whether to validate inputs (default: true)","ref":"Quant.Math.MovingAverages.html#add_dema!/3-parameters"},{"type":"function","title":"Returns - Quant.Math.MovingAverages.add_dema!/3","doc":"- `DataFrame.t()` - DataFrame with DEMA column added","ref":"Quant.Math.MovingAverages.html#add_dema!/3-returns"},{"type":"function","title":"Raises - Quant.Math.MovingAverages.add_dema!/3","doc":"- `ArgumentError` - If inputs are invalid or insufficient data","ref":"Quant.Math.MovingAverages.html#add_dema!/3-raises"},{"type":"function","title":"Examples - Quant.Math.MovingAverages.add_dema!/3","doc":"iex> df = Explorer.DataFrame.new(%{close: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]})\n    iex> result = Quant.Math.MovingAverages.add_dema!(df, :close, period: 4)\n    iex> \"close_dema_4\" in Map.keys(result.dtypes)\n    true\n\n    # DEMA reduces lag compared to traditional EMA\n    iex> df = Explorer.DataFrame.new(%{close: [10, 12, 11, 13, 12, 14, 13, 15, 14, 16]})\n    iex> result = Quant.Math.MovingAverages.add_dema!(df, :close, period: 4)\n    iex> dema_values = Explorer.DataFrame.to_columns(result)[\"close_dema_4\"]\n    iex> is_list(dema_values) and length(dema_values) == 10\n    true","ref":"Quant.Math.MovingAverages.html#add_dema!/3-examples"},{"type":"function","title":"Mathematical Properties - Quant.Math.MovingAverages.add_dema!/3","doc":"- **Reduced Lag**: Responds faster to price changes than traditional EMA\n- **Double Smoothing**: Uses two EMA calculations for improved trend following\n- **Trend Sensitivity**: More sensitive to recent price changes than single EMA\n- **Overshooting**: May overshoot in trending markets due to reduced lag","ref":"Quant.Math.MovingAverages.html#add_dema!/3-mathematical-properties"},{"type":"function","title":"Quant.Math.MovingAverages.add_ema!/3","doc":"Add Exponential Moving Average (EMA) to a DataFrame.\n\nThe Exponential Moving Average gives more weight to recent prices and responds\nmore quickly to price changes than a simple moving average. The first EMA value\nis calculated as the SMA of the first `period` values.","ref":"Quant.Math.MovingAverages.html#add_ema!/3"},{"type":"function","title":"Parameters - Quant.Math.MovingAverages.add_ema!/3","doc":"- `dataframe` - The Explorer DataFrame\n- `column` - The column to calculate EMA for (atom)\n- `opts` - Options (keyword list)","ref":"Quant.Math.MovingAverages.html#add_ema!/3-parameters"},{"type":"function","title":"Options - Quant.Math.MovingAverages.add_ema!/3","doc":"- `:period` - Number of periods for the exponential moving average (default: 12)\n- `:alpha` - Smoothing factor (default: 2/(period+1))\n- `:name` - Name for the new column (default: \" _ema_ \")\n- `:nan_policy` - How to handle NaN values (default: :drop)\n- `:min_periods` - Minimum periods required (default: same as period)\n- `:fillna` - Value to fill NaN results with (default: nil)","ref":"Quant.Math.MovingAverages.html#add_ema!/3-options"},{"type":"function","title":"Examples - Quant.Math.MovingAverages.add_ema!/3","doc":"iex> df = Explorer.DataFrame.new(%{close: [1.0, 2.0, 3.0, 4.0, 5.0]})\n    iex> result = Quant.Math.MovingAverages.add_ema!(df, :close, period: 3)\n    iex> \"close_ema_3\" in Map.keys(result.dtypes)\n    true\n\n    iex> df = Explorer.DataFrame.new(%{close: [10.0, 12.0, 14.0, 16.0, 18.0]})\n    iex> result = Quant.Math.MovingAverages.add_ema!(df, :close, period: 2, name: \"ema_2\")\n    iex> \"ema_2\" in Map.keys(result.dtypes)\n    true","ref":"Quant.Math.MovingAverages.html#add_ema!/3-examples"},{"type":"function","title":"Quant.Math.MovingAverages.add_hma!/3","doc":"Add Hull Moving Average (HMA) to a DataFrame.\n\nThe Hull Moving Average was developed by Alan Hull to address the lag inherent in traditional moving averages.\nIt uses weighted moving averages and a square root period to significantly reduce lag while maintaining smoothness.","ref":"Quant.Math.MovingAverages.html#add_hma!/3"},{"type":"function","title":"Algorithm - Quant.Math.MovingAverages.add_hma!/3","doc":"1. Calculate WMA(period/2) of the price data\n2. Calculate WMA(period) of the price data\n3. Calculate raw HMA: 2 × WMA(period/2) - WMA(period)\n4. Apply WMA(√period) to the raw HMA for final smoothing","ref":"Quant.Math.MovingAverages.html#add_hma!/3-algorithm"},{"type":"function","title":"Parameters - Quant.Math.MovingAverages.add_hma!/3","doc":"- `df` - Explorer DataFrame containing price data\n- `price_column` - Name of the column containing prices (default: :close)\n- `options` - Keyword list with the following options:\n  - `:period` - HMA period (required, positive integer)\n  - `:column_name` - Name for the HMA column (default: :hma_N where N is period)\n  - `:validate` - Whether to validate inputs (default: true)","ref":"Quant.Math.MovingAverages.html#add_hma!/3-parameters"},{"type":"function","title":"Returns - Quant.Math.MovingAverages.add_hma!/3","doc":"- `DataFrame.t()` - DataFrame with HMA column added","ref":"Quant.Math.MovingAverages.html#add_hma!/3-returns"},{"type":"function","title":"Raises - Quant.Math.MovingAverages.add_hma!/3","doc":"- `ArgumentError` - If inputs are invalid or insufficient data","ref":"Quant.Math.MovingAverages.html#add_hma!/3-raises"},{"type":"function","title":"Examples - Quant.Math.MovingAverages.add_hma!/3","doc":"iex> df = Explorer.DataFrame.new(%{close: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]})\n    iex> result = Quant.Math.MovingAverages.add_hma!(df, :close, period: 4)\n    iex> \"close_hma_4\" in Map.keys(result.dtypes)\n    true\n\n    # Hull MA reduces lag compared to traditional moving averages\n    iex> df = Explorer.DataFrame.new(%{close: [10, 12, 11, 13, 12, 14, 13, 15, 14, 16]})\n    iex> result = Quant.Math.MovingAverages.add_hma!(df, :close, period: 4)\n    iex> hma_values = Explorer.DataFrame.to_columns(result)[\"close_hma_4\"]\n    iex> is_list(hma_values) and length(hma_values) == 10\n    true","ref":"Quant.Math.MovingAverages.html#add_hma!/3-examples"},{"type":"function","title":"Mathematical Properties - Quant.Math.MovingAverages.add_hma!/3","doc":"- **Reduced Lag**: Responds faster to price changes than SMA/EMA\n- **Smoothness**: Maintains smoothness despite reduced lag\n- **Trend Following**: Excellent for trend identification\n- **Whipsaws**: May produce more false signals in choppy markets","ref":"Quant.Math.MovingAverages.html#add_hma!/3-mathematical-properties"},{"type":"function","title":"Quant.Math.MovingAverages.add_kama!/3","doc":"Add Kaufman Adaptive Moving Average (KAMA) to a DataFrame.\n\nKAMA is an adaptive moving average that adjusts its smoothing based on market\nconditions. It uses an Efficiency Ratio to determine how much noise is in the\nprice movement, applying more smoothing during choppy markets and less smoothing\nduring trending markets.","ref":"Quant.Math.MovingAverages.html#add_kama!/3"},{"type":"function","title":"Parameters - Quant.Math.MovingAverages.add_kama!/3","doc":"- `dataframe` - The Explorer DataFrame\n- `price_column` - The column to calculate KAMA for (default: :close)\n- `options` - Options (keyword list)","ref":"Quant.Math.MovingAverages.html#add_kama!/3-parameters"},{"type":"function","title":"Options - Quant.Math.MovingAverages.add_kama!/3","doc":"- `:period` - Number of periods for efficiency ratio calculation (required, positive integer)\n- `:fast_sc` - Fast smoothing constant (default: 2, for fast EMA equivalent)\n- `:slow_sc` - Slow smoothing constant (default: 30, for slow EMA equivalent)\n- `:column_name` - Name for the KAMA column (default: \"close_kama_N\" where N is period)","ref":"Quant.Math.MovingAverages.html#add_kama!/3-options"},{"type":"function","title":"Algorithm - Quant.Math.MovingAverages.add_kama!/3","doc":"1. **Efficiency Ratio (ER)** = |Price Change| / Sum of |Daily Changes|\n2. **Smoothing Constant (SC)** = [ER × (Fastest SC - Slowest SC) + Slowest SC]²\n3. **KAMA** = Previous KAMA + SC × (Current Price - Previous KAMA)\n\nThe Efficiency Ratio ranges from 0 (very choppy) to 1 (perfectly trending).\nKAMA adapts between the fast and slow smoothing constants based on this ratio.","ref":"Quant.Math.MovingAverages.html#add_kama!/3-algorithm"},{"type":"function","title":"Examples - Quant.Math.MovingAverages.add_kama!/3","doc":"# Basic KAMA with 10-period efficiency ratio\n    df |> Quant.Math.add_kama!(:close, period: 10)\n\n    # KAMA with custom fast/slow parameters\n    df |> Quant.Math.add_kama!(:close, period: 14, fast_sc: 2, slow_sc: 30)\n\n    # KAMA with custom column name\n    df |> Quant.Math.add_kama!(:high, period: 20, column_name: \"kama_high\")","ref":"Quant.Math.MovingAverages.html#add_kama!/3-examples"},{"type":"function","title":"Returns - Quant.Math.MovingAverages.add_kama!/3","doc":"The DataFrame with the KAMA column added. Raises `ArgumentError` if parameters\nare invalid or if there's insufficient data.","ref":"Quant.Math.MovingAverages.html#add_kama!/3-returns"},{"type":"function","title":"Quant.Math.MovingAverages.add_sma!/3","doc":"Add Simple Moving Average (SMA) to a DataFrame.\n\nThe Simple Moving Average is calculated as the arithmetic mean of values\nover a specified period. Values before the minimum required periods are\nset to NaN.","ref":"Quant.Math.MovingAverages.html#add_sma!/3"},{"type":"function","title":"Parameters - Quant.Math.MovingAverages.add_sma!/3","doc":"- `dataframe` - The Explorer DataFrame\n- `column` - The column to calculate SMA for (atom)\n- `opts` - Options (keyword list)","ref":"Quant.Math.MovingAverages.html#add_sma!/3-parameters"},{"type":"function","title":"Options - Quant.Math.MovingAverages.add_sma!/3","doc":"- `:period` - Number of periods for the moving average (default: 20)\n- `:name` - Name for the new column (default: \" _sma_ \")\n- `:nan_policy` - How to handle NaN values (default: :drop)\n- `:min_periods` - Minimum periods required (default: same as period)\n- `:fillna` - Value to fill NaN results with (default: nil)","ref":"Quant.Math.MovingAverages.html#add_sma!/3-options"},{"type":"function","title":"Examples - Quant.Math.MovingAverages.add_sma!/3","doc":"iex> df = Explorer.DataFrame.new(%{close: [1.0, 2.0, 3.0, 4.0, 5.0]})\n    iex> result = Quant.Math.MovingAverages.add_sma!(df, :close, period: 3)\n    iex> \"close_sma_3\" in Map.keys(result.dtypes)\n    true\n\n    iex> df = Explorer.DataFrame.new(%{close: [1.0, 2.0, 3.0, 4.0, 5.0]})\n    iex> result = Quant.Math.MovingAverages.add_sma!(df, :close, period: 2, name: \"ma_2\")\n    iex> \"ma_2\" in Map.keys(result.dtypes)\n    true","ref":"Quant.Math.MovingAverages.html#add_sma!/3-examples"},{"type":"function","title":"Quant.Math.MovingAverages.add_tema!/3","doc":"Add Triple Exponential Moving Average (TEMA) to a DataFrame.\n\nThe Triple Exponential Moving Average extends the DEMA concept by applying\na third level of exponential smoothing, further reducing lag while maintaining\nsmoothness. TEMA is calculated as:\n\nEMA1 = EMA(price, period)\nEMA2 = EMA(EMA1, period)\nEMA3 = EMA(EMA2, period)\nTEMA = 3 * EMA1 - 3 * EMA2 + EMA3\n\nThis provides even faster response to price changes than DEMA while minimizing\nnoise. TEMA requires approximately 3 * (period - 1) observations before producing\nvalid values.","ref":"Quant.Math.MovingAverages.html#add_tema!/3"},{"type":"function","title":"Parameters - Quant.Math.MovingAverages.add_tema!/3","doc":"- `dataframe` - The Explorer DataFrame\n- `price_column` - The column to calculate TEMA for (default: :close)\n- `options` - Options (keyword list)","ref":"Quant.Math.MovingAverages.html#add_tema!/3-parameters"},{"type":"function","title":"Options - Quant.Math.MovingAverages.add_tema!/3","doc":"- `:period` - Number of periods for calculation (required, positive integer)\n- `:alpha` - Smoothing factor (optional, overrides period-based calculation)\n- `:column_name` - Name for the TEMA column (default: \"tema_N\" where N is period)","ref":"Quant.Math.MovingAverages.html#add_tema!/3-options"},{"type":"function","title":"Examples - Quant.Math.MovingAverages.add_tema!/3","doc":"# Basic TEMA with 10-period\n    df |> Quant.Math.add_tema!(period: 10)\n\n    # TEMA with custom column name and alpha\n    df |> Quant.Math.add_tema!(:high, period: 20, column_name: \"tema_high\", alpha: 0.15)","ref":"Quant.Math.MovingAverages.html#add_tema!/3-examples"},{"type":"function","title":"Returns - Quant.Math.MovingAverages.add_tema!/3","doc":"The DataFrame with the TEMA column added. Raises `ArgumentError` if parameters\nare invalid or if there's insufficient data.","ref":"Quant.Math.MovingAverages.html#add_tema!/3-returns"},{"type":"function","title":"Quant.Math.MovingAverages.add_wma!/3","doc":"Add Weighted Moving Average (WMA) column to a DataFrame.\n\nWMA gives more weight to recent prices with configurable weight vectors.\nDefault uses linear weights: [1, 2, 3, ..., period] where recent prices have higher weights.","ref":"Quant.Math.MovingAverages.html#add_wma!/3"},{"type":"function","title":"Parameters - Quant.Math.MovingAverages.add_wma!/3","doc":"- `df` - Explorer DataFrame containing price data\n- `price_column` - Name of the column containing prices (default: :close)\n- `options` - Keyword list with the following options:\n  - `:period` - WMA period (required, positive integer)\n  - `:column_name` - Name for the WMA column (default: :wma_N where N is period)\n  - `:weights` - Custom weight vector as list (default: linear [1, 2, 3, ..., period])\n  - `:validate` - Whether to validate inputs (default: true)","ref":"Quant.Math.MovingAverages.html#add_wma!/3-parameters"},{"type":"function","title":"Returns - Quant.Math.MovingAverages.add_wma!/3","doc":"- `{:ok, DataFrame.t()}` - DataFrame with WMA column added\n- `{:error, reason}` - Error tuple if validation fails","ref":"Quant.Math.MovingAverages.html#add_wma!/3-returns"},{"type":"function","title":"Examples - Quant.Math.MovingAverages.add_wma!/3","doc":"iex> df = Explorer.DataFrame.new(%{close: [10, 12, 14, 16, 18, 20]})\n    iex> result = Quant.Math.MovingAverages.add_wma!(df, :close, period: 3)\n    iex> Explorer.DataFrame.to_columns(result)[\"close_wma_3\"] |> Enum.take(-3) |> Enum.map(&Float.round(&1, 2))\n    [14.67, 16.67, 18.67]  # Weighted averages with linear weights\n\n    # Custom weights (equal weights = SMA)\n    iex> df = Explorer.DataFrame.new(%{close: [10, 12, 14, 16, 18, 20]})\n    iex> result = Quant.Math.MovingAverages.add_wma!(df, :close, period: 3, weights: [1, 1, 1])\n    iex> Explorer.DataFrame.to_columns(result)[\"close_wma_3\"] |> Enum.take(-3)\n    [14.0, 16.0, 18.0]  # Same as SMA with equal weights","ref":"Quant.Math.MovingAverages.html#add_wma!/3-examples"},{"type":"function","title":"Algorithm - Quant.Math.MovingAverages.add_wma!/3","doc":"- Linear weights (default): WMA_t = (P_t×N + P_(t-1)×(N-1) + ... + P_(t-N+1)×1) / (1+2+...+N)\n- Custom weights: WMA_t = (P_t×W_N + P_(t-1)×W_(N-1) + ... + P_(t-N+1)×W_1) / Σ(W_i)\n- Returns NaN for periods with insufficient data","ref":"Quant.Math.MovingAverages.html#add_wma!/3-algorithm"},{"type":"function","title":"Quant.Math.MovingAverages.analyze_ma_results!/2","doc":"Get information about SMA/EMA results in a DataFrame.\n\nThis function helps users understand moving average results,\nespecially regarding NaN values that appear before sufficient\ndata points are available.","ref":"Quant.Math.MovingAverages.html#analyze_ma_results!/2"},{"type":"function","title":"Parameters - Quant.Math.MovingAverages.analyze_ma_results!/2","doc":"- `dataframe` - DataFrame containing moving average results\n- `column` - The moving average column to analyze (atom or string)","ref":"Quant.Math.MovingAverages.html#analyze_ma_results!/2-parameters"},{"type":"function","title":"Returns - Quant.Math.MovingAverages.analyze_ma_results!/2","doc":"A map containing:\n- `:total_rows` - Total number of rows\n- `:nan_count` - Number of NaN values\n- `:valid_count` - Number of valid (non-NaN) values\n- `:first_valid_index` - Index of first valid value\n- `:summary_stats` - Min, max, mean of valid values","ref":"Quant.Math.MovingAverages.html#analyze_ma_results!/2-returns"},{"type":"function","title":"Examples - Quant.Math.MovingAverages.analyze_ma_results!/2","doc":"iex> df = Explorer.DataFrame.new(%{close: [1.0, 2.0, 3.0, 4.0, 5.0]})\n    iex> result = Quant.Math.MovingAverages.add_sma!(df, :close, period: 3)\n    iex> info = Quant.Math.MovingAverages.analyze_ma_results!(result, \"close_sma_3\")\n    iex> info.valid_count\n    3","ref":"Quant.Math.MovingAverages.html#analyze_ma_results!/2-examples"},{"type":"module","title":"Quant.Math.Oscillators","doc":"Momentum oscillators and technical indicators for financial time series analysis.\n\nThis module provides implementations of popular momentum indicators including:\n- MACD (Moving Average Convergence Divergence)\n- RSI (Relative Strength Index)\n\nAll functions are DataFrame-first and integrate seamlessly with Explorer DataFrames.","ref":"Quant.Math.Oscillators.html"},{"type":"function","title":"Quant.Math.Oscillators.add_macd!/3","doc":"Add MACD (Moving Average Convergence Divergence) to a DataFrame.\n\nMACD is a trend-following momentum indicator that shows the relationship between\ntwo moving averages of a security's price. The MACD is calculated by subtracting\nthe 26-period Exponential Moving Average (EMA) from the 12-period EMA.","ref":"Quant.Math.Oscillators.html#add_macd!/3"},{"type":"function","title":"Components - Quant.Math.Oscillators.add_macd!/3","doc":"- **MACD Line**: Fast EMA - Slow EMA\n- **Signal Line**: EMA of the MACD Line (typically 9-period)\n- **Histogram**: MACD Line - Signal Line","ref":"Quant.Math.Oscillators.html#add_macd!/3-components"},{"type":"function","title":"Parameters - Quant.Math.Oscillators.add_macd!/3","doc":"- `dataframe` - Explorer DataFrame with financial data\n- `column` - Column name to calculate MACD on (typically :close)\n- `opts` - Options keyword list:\n  - `:fast_period` - Fast EMA period (default: 12)\n  - `:slow_period` - Slow EMA period (default: 26)\n  - `:signal_period` - Signal EMA period (default: 9)\n  - `:macd_column` - MACD line column name (default: auto-generated)\n  - `:signal_column` - Signal line column name (default: auto-generated)\n  - `:histogram_column` - Histogram column name (default: auto-generated)","ref":"Quant.Math.Oscillators.html#add_macd!/3-parameters"},{"type":"function","title":"Examples - Quant.Math.Oscillators.add_macd!/3","doc":"iex> df = Explorer.DataFrame.new(%{\n    ...>   close: [10.0, 11.0, 12.0, 11.5, 13.0, 12.8, 14.0, 13.5, 15.0, 14.2,\n    ...>           16.0, 15.5, 17.0, 16.8, 18.0, 17.5, 19.0, 18.2, 20.0, 19.5,\n    ...>           21.0, 20.8, 22.0, 21.5, 23.0, 22.2, 24.0, 23.8, 25.0, 24.5]\n    ...> })\n    iex> result = Quant.Math.Oscillators.add_macd!(df, :close)\n    iex> result |> Explorer.DataFrame.names() |> Enum.sort()\n    [\"close\", \"close_histogram_12_26_9\", \"close_macd_12_26\", \"close_signal_9\"]\n\n    # Custom parameters\n    iex> df = Explorer.DataFrame.new(%{close: [1.0, 2.0, 3.0, 4.0, 5.0]})\n    iex> result = Quant.Math.Oscillators.add_macd!(df, :close, fast_period: 2, slow_period: 3, signal_period: 2)\n    iex> Explorer.DataFrame.names(result) |> Enum.member?(\"close_macd_2_3\")\n    true","ref":"Quant.Math.Oscillators.html#add_macd!/3-examples"},{"type":"function","title":"Quant.Math.Oscillators.add_rsi!/3","doc":"Add RSI (Relative Strength Index) to a DataFrame.\n\nRSI is a momentum oscillator that measures the speed and change of price movements.\nIt oscillates between 0 and 100 and is typically used to identify overbought and\noversold conditions in a security.","ref":"Quant.Math.Oscillators.html#add_rsi!/3"},{"type":"function","title":"Algorithm - Quant.Math.Oscillators.add_rsi!/3","doc":"RSI uses Wilder's smoothing method (different from standard EMA):\n- Calculate daily price changes (gains and losses)\n- Apply Wilder's smoothing to average gains and losses\n- RSI = 100 - (100 / (1 + RS)) where RS = Average Gain / Average Loss","ref":"Quant.Math.Oscillators.html#add_rsi!/3-algorithm"},{"type":"function","title":"Parameters - Quant.Math.Oscillators.add_rsi!/3","doc":"- `dataframe` - Explorer DataFrame with financial data\n- `column` - Column name to calculate RSI on (typically :close)\n- `opts` - Options keyword list:\n  - `:period` - RSI period (default: 14)\n  - `:column_name` - Output column name (default: auto-generated)\n  - `:overbought` - Overbought threshold for analysis (default: 70)\n  - `:oversold` - Oversold threshold for analysis (default: 30)","ref":"Quant.Math.Oscillators.html#add_rsi!/3-parameters"},{"type":"function","title":"Returns - Quant.Math.Oscillators.add_rsi!/3","doc":"DataFrame with additional RSI column","ref":"Quant.Math.Oscillators.html#add_rsi!/3-returns"},{"type":"function","title":"Examples - Quant.Math.Oscillators.add_rsi!/3","doc":"iex> df = Explorer.DataFrame.new(%{\n    ...>   close: [44.0, 44.3, 44.1, 44.2, 44.5, 43.4, 44.0, 44.25, 44.8, 45.1,\n    ...>           45.4, 45.8, 46.0, 45.9, 45.2, 44.8, 44.6, 44.4, 44.2, 44.0]\n    ...> })\n    iex> result = Quant.Math.Oscillators.add_rsi!(df, :close)\n    iex> \"close_rsi_14\" in Explorer.DataFrame.names(result)\n    true\n\n    # Custom parameters\n    iex> df = Explorer.DataFrame.new(%{close: [10.0, 11.0, 12.0, 11.5, 13.0, 12.8, 14.0, 13.5, 15.0, 14.2]})\n    iex> result = Quant.Math.Oscillators.add_rsi!(df, :close, period: 5, column_name: \"custom_rsi\")\n    iex> \"custom_rsi\" in Explorer.DataFrame.names(result)\n    true","ref":"Quant.Math.Oscillators.html#add_rsi!/3-examples"},{"type":"function","title":"Quant.Math.Oscillators.detect_macd_crossovers/4","doc":"Detect MACD crossovers in a DataFrame.\n\nIdentifies bullish and bearish crossovers between MACD line and Signal line:\n- **Bullish Crossover**: MACD line crosses above Signal line (buy signal)\n- **Bearish Crossover**: MACD line crosses below Signal line (sell signal)","ref":"Quant.Math.Oscillators.html#detect_macd_crossovers/4"},{"type":"function","title":"Parameters - Quant.Math.Oscillators.detect_macd_crossovers/4","doc":"- `dataframe` - DataFrame with MACD and Signal columns\n- `macd_column` - MACD line column name\n- `signal_column` - Signal line column name\n- `opts` - Options:\n  - `:crossover_column` - Output column name (default: \"macd_crossover\")","ref":"Quant.Math.Oscillators.html#detect_macd_crossovers/4-parameters"},{"type":"function","title":"Returns - Quant.Math.Oscillators.detect_macd_crossovers/4","doc":"DataFrame with additional crossover column containing:\n- `1` for bullish crossover (MACD crosses above Signal)\n- `-1` for bearish crossover (MACD crosses below Signal)\n- `0` for no crossover","ref":"Quant.Math.Oscillators.html#detect_macd_crossovers/4-returns"},{"type":"function","title":"Examples - Quant.Math.Oscillators.detect_macd_crossovers/4","doc":"iex> df = Explorer.DataFrame.new(%{\n    ...>   macd: [0.1, 0.2, 0.15, -0.1, -0.2, 0.05, 0.15],\n    ...>   signal: [0.05, 0.15, 0.25, 0.1, -0.05, -0.1, 0.05]\n    ...> })\n    iex> result = Quant.Math.Oscillators.detect_macd_crossovers(df, \"macd\", \"signal\")\n    iex> crossovers = result |> Explorer.DataFrame.pull(\"macd_crossover\") |> Explorer.Series.to_list()\n    iex> Enum.any?(crossovers, fn x -> x != 0 end)\n    true","ref":"Quant.Math.Oscillators.html#detect_macd_crossovers/4-examples"},{"type":"function","title":"Quant.Math.Oscillators.rsi_signals/3","doc":"Identify RSI overbought and oversold conditions.\n\nAnalyzes RSI values to identify potential trading signals based on traditional\noverbought (>70) and oversold (<30) levels.","ref":"Quant.Math.Oscillators.html#rsi_signals/3"},{"type":"function","title":"Parameters - Quant.Math.Oscillators.rsi_signals/3","doc":"- `dataframe` - DataFrame with RSI column\n- `rsi_column` - RSI column name\n- `opts` - Options:\n  - `:overbought` - Overbought threshold (default: 70)\n  - `:oversold` - Oversold threshold (default: 30)\n  - `:signal_column` - Output column name (default: \"rsi_signal\")","ref":"Quant.Math.Oscillators.html#rsi_signals/3-parameters"},{"type":"function","title":"Returns - Quant.Math.Oscillators.rsi_signals/3","doc":"DataFrame with additional signal column containing:\n- `1` for oversold condition (potential buy signal)\n- `-1` for overbought condition (potential sell signal)\n- `0` for neutral condition","ref":"Quant.Math.Oscillators.html#rsi_signals/3-returns"},{"type":"function","title":"Examples - Quant.Math.Oscillators.rsi_signals/3","doc":"iex> df = Explorer.DataFrame.new(%{rsi: [20, 40, 60, 80, 50, 25, 75]})\n    iex> result = Quant.Math.Oscillators.rsi_signals(df, \"rsi\")\n    iex> signals = result |> Explorer.DataFrame.pull(\"rsi_signal\") |> Explorer.Series.to_list()\n    iex> Enum.member?(signals, 1) and Enum.member?(signals, -1)\n    true","ref":"Quant.Math.Oscillators.html#rsi_signals/3-examples"},{"type":"module","title":"Quant.Math.Utils","doc":"Shared utility functions for mathematical operations in the Quant.Math module.\n\nThis module provides common utilities used across different technical indicator\nimplementations, including DataFrame/NX bridge functions, validation, and\ncore mathematical operations.","ref":"Quant.Math.Utils.html"},{"type":"function","title":"Quant.Math.Utils.exponential_mean/3","doc":"Calculate exponential moving average over a tensor.","ref":"Quant.Math.Utils.html#exponential_mean/3"},{"type":"function","title":"Parameters - Quant.Math.Utils.exponential_mean/3","doc":"- `tensor` - The input NX Tensor\n- `period` - The period for the EMA calculation\n- `alpha` - Optional alpha (smoothing factor). If not provided, uses 2/(period+1)","ref":"Quant.Math.Utils.html#exponential_mean/3-parameters"},{"type":"function","title":"Returns - Quant.Math.Utils.exponential_mean/3","doc":"- `Nx.Tensor.t()` - Tensor with EMA values, first value is SMA of first `period` values","ref":"Quant.Math.Utils.html#exponential_mean/3-returns"},{"type":"function","title":"Algorithm - Quant.Math.Utils.exponential_mean/3","doc":"- First EMA value = SMA of first `period` values\n- Subsequent EMA values = alpha * current_price + (1 - alpha) * previous_ema\n- Default alpha = 2 / (period + 1)","ref":"Quant.Math.Utils.html#exponential_mean/3-algorithm"},{"type":"function","title":"Quant.Math.Utils.rolling_mean/2","doc":"Calculate rolling mean over a tensor using a sliding window.","ref":"Quant.Math.Utils.html#rolling_mean/2"},{"type":"function","title":"Parameters - Quant.Math.Utils.rolling_mean/2","doc":"- `tensor` - The input NX Tensor\n- `window_size` - The size of the rolling window","ref":"Quant.Math.Utils.html#rolling_mean/2-parameters"},{"type":"function","title":"Returns - Quant.Math.Utils.rolling_mean/2","doc":"- `Nx.Tensor.t()` - Tensor with rolling means, NaN for insufficient data","ref":"Quant.Math.Utils.html#rolling_mean/2-returns"},{"type":"function","title":"Quant.Math.Utils.to_series/2","doc":"Convert an NX Tensor back to an Explorer Series.","ref":"Quant.Math.Utils.html#to_series/2"},{"type":"function","title":"Parameters - Quant.Math.Utils.to_series/2","doc":"- `tensor` - The NX Tensor to convert\n- `name` - The name for the series (currently unused but kept for API consistency)","ref":"Quant.Math.Utils.html#to_series/2-parameters"},{"type":"function","title":"Returns - Quant.Math.Utils.to_series/2","doc":"- `Series.t()` - The converted series with :f64 dtype","ref":"Quant.Math.Utils.html#to_series/2-returns"},{"type":"function","title":"Quant.Math.Utils.to_tensor/1","doc":"Convert an Explorer Series to an NX Tensor.","ref":"Quant.Math.Utils.html#to_tensor/1"},{"type":"function","title":"Parameters - Quant.Math.Utils.to_tensor/1","doc":"- `series` - The Explorer Series to convert","ref":"Quant.Math.Utils.html#to_tensor/1-parameters"},{"type":"function","title":"Returns - Quant.Math.Utils.to_tensor/1","doc":"- `Nx.Tensor.t()` - The converted tensor with :f64 type","ref":"Quant.Math.Utils.html#to_tensor/1-returns"},{"type":"function","title":"Quant.Math.Utils.validate_column/2","doc":"Validate that a column exists in the DataFrame.","ref":"Quant.Math.Utils.html#validate_column/2"},{"type":"function","title":"Parameters - Quant.Math.Utils.validate_column/2","doc":"- `df` - The DataFrame to check\n- `column` - The column name (atom) to validate","ref":"Quant.Math.Utils.html#validate_column/2-parameters"},{"type":"function","title":"Returns - Quant.Math.Utils.validate_column/2","doc":"- `:ok` if column exists\n- `{:error, message}` if column is missing","ref":"Quant.Math.Utils.html#validate_column/2-returns"},{"type":"function","title":"Quant.Math.Utils.validate_column!/2","doc":"Validate that a column exists in the DataFrame and raise if not.","ref":"Quant.Math.Utils.html#validate_column!/2"},{"type":"function","title":"Parameters - Quant.Math.Utils.validate_column!/2","doc":"- `df` - The DataFrame to check\n- `column` - The column name (atom) to validate","ref":"Quant.Math.Utils.html#validate_column!/2-parameters"},{"type":"function","title":"Returns - Quant.Math.Utils.validate_column!/2","doc":"- `:ok` if column exists","ref":"Quant.Math.Utils.html#validate_column!/2-returns"},{"type":"function","title":"Raises - Quant.Math.Utils.validate_column!/2","doc":"- `ArgumentError` if column does not exist","ref":"Quant.Math.Utils.html#validate_column!/2-raises"},{"type":"function","title":"Quant.Math.Utils.validate_dataframe!/1","doc":"Validate that a DataFrame is valid and raise if not.","ref":"Quant.Math.Utils.html#validate_dataframe!/1"},{"type":"function","title":"Parameters - Quant.Math.Utils.validate_dataframe!/1","doc":"- `df` - The DataFrame to validate","ref":"Quant.Math.Utils.html#validate_dataframe!/1-parameters"},{"type":"function","title":"Returns - Quant.Math.Utils.validate_dataframe!/1","doc":"- `:ok` if valid DataFrame","ref":"Quant.Math.Utils.html#validate_dataframe!/1-returns"},{"type":"function","title":"Raises - Quant.Math.Utils.validate_dataframe!/1","doc":"- `ArgumentError` if not a valid DataFrame","ref":"Quant.Math.Utils.html#validate_dataframe!/1-raises"},{"type":"function","title":"Quant.Math.Utils.validate_period!/2","doc":"Validate that a period is a positive integer and raise if not.","ref":"Quant.Math.Utils.html#validate_period!/2"},{"type":"function","title":"Parameters - Quant.Math.Utils.validate_period!/2","doc":"- `period` - The period to validate\n- `name` - Optional name for better error messages (default: \"period\")","ref":"Quant.Math.Utils.html#validate_period!/2-parameters"},{"type":"function","title":"Returns - Quant.Math.Utils.validate_period!/2","doc":"- `:ok` if valid period","ref":"Quant.Math.Utils.html#validate_period!/2-returns"},{"type":"function","title":"Raises - Quant.Math.Utils.validate_period!/2","doc":"- `ArgumentError` if period is not a positive integer","ref":"Quant.Math.Utils.html#validate_period!/2-raises"},{"type":"function","title":"Quant.Math.Utils.weighted_mean/3","doc":"Calculate weighted moving average over a tensor using a sliding window.","ref":"Quant.Math.Utils.html#weighted_mean/3"},{"type":"function","title":"Parameters - Quant.Math.Utils.weighted_mean/3","doc":"- `tensor` - The input NX Tensor\n- `period` - The period for the WMA calculation\n- `weights` - Optional weight vector. If not provided, uses linear weights [1, 2, 3, ..., period]","ref":"Quant.Math.Utils.html#weighted_mean/3-parameters"},{"type":"function","title":"Returns - Quant.Math.Utils.weighted_mean/3","doc":"- `Nx.Tensor.t()` - Tensor with WMA values, NaN for insufficient data","ref":"Quant.Math.Utils.html#weighted_mean/3-returns"},{"type":"function","title":"Algorithm - Quant.Math.Utils.weighted_mean/3","doc":"- Default weights: Linear sequence [1, 2, 3, ..., period]\n- WMA = Σ(price_i × weight_i) / Σ(weight_i)\n- Gives more weight to recent prices in the linear case","ref":"Quant.Math.Utils.html#weighted_mean/3-algorithm"},{"type":"module","title":"Quant.Strategy","doc":"Main API module for quantitative trading strategies.\n\nThis module provides a unified interface for creating, composing, and executing\ntrading strategies using technical indicators from `Quant.Math`.","ref":"Quant.Strategy.html"},{"type":"module","title":"Strategy Types - Quant.Strategy","doc":"- **Signal-based strategies**: Generate buy/sell signals based on technical indicators\n- **Momentum strategies**: Follow trends using moving averages and momentum indicators\n- **Mean reversion strategies**: Trade on price reversals using oscillators\n- **Composite strategies**: Combine multiple indicators for robust signal generation","ref":"Quant.Strategy.html#module-strategy-types"},{"type":"module","title":"Basic Usage - Quant.Strategy","doc":"# Simple moving average crossover strategy\n    strategy = Quant.Strategy.sma_crossover(fast_period: 12, slow_period: 26)\n    signals = Quant.Strategy.generate_signals(df, strategy)\n\n    # RSI oversold/overbought strategy\n    strategy = Quant.Strategy.rsi_threshold(oversold: 30, overbought: 70)\n    signals = Quant.Strategy.generate_signals(df, strategy)\n\n    # Composite strategy combining multiple indicators\n    strategy = Quant.Strategy.composite([\n      Quant.Strategy.sma_crossover(fast_period: 12, slow_period: 26),\n      Quant.Strategy.rsi_threshold(oversold: 30, overbought: 70)\n    ], logic: :all)","ref":"Quant.Strategy.html#module-basic-usage"},{"type":"module","title":"Signal Format - Quant.Strategy","doc":"All strategies generate signals as DataFrame columns:\n- `signal`: Integer values (-1: sell, 0: hold, 1: buy)\n- `signal_strength`: Float values (0.0-1.0) indicating confidence\n- `signal_reason`: String describing the signal trigger","ref":"Quant.Strategy.html#module-signal-format"},{"type":"module","title":"Strategy Composition - Quant.Strategy","doc":"Strategies can be combined using logical operators:\n- `:all` - All component strategies must agree (AND logic)\n- `:any` - Any component strategy can trigger (OR logic)\n- `:majority` - Majority of strategies must agree\n- `:weighted` - Weighted combination based on strategy confidence","ref":"Quant.Strategy.html#module-strategy-composition"},{"type":"type","title":"Quant.Strategy.signal_strength/0","doc":"","ref":"Quant.Strategy.html#t:signal_strength/0"},{"type":"type","title":"Quant.Strategy.signal_value/0","doc":"","ref":"Quant.Strategy.html#t:signal_value/0"},{"type":"type","title":"Quant.Strategy.strategy/0","doc":"","ref":"Quant.Strategy.html#t:strategy/0"},{"type":"type","title":"Quant.Strategy.strategy_result/0","doc":"","ref":"Quant.Strategy.html#t:strategy_result/0"},{"type":"function","title":"Quant.Strategy.analyze_performance/2","doc":"Analyze strategy performance and generate metrics.\n\nReturns comprehensive performance analysis including:\n- Total return, annualized return\n- Sharpe ratio, Sortino ratio\n- Maximum drawdown\n- Win rate, profit factor\n- Risk metrics","ref":"Quant.Strategy.html#analyze_performance/2"},{"type":"function","title":"Quant.Strategy.backtest/3","doc":"Backtest a strategy against historical data.","ref":"Quant.Strategy.html#backtest/3"},{"type":"function","title":"Parameters - Quant.Strategy.backtest/3","doc":"- `dataframe` - Historical OHLCV data\n- `strategy` - Strategy to test\n- `opts` - Backtesting options","ref":"Quant.Strategy.html#backtest/3-parameters"},{"type":"function","title":"Options - Quant.Strategy.backtest/3","doc":"- `:initial_capital` - Starting capital (default: 10000.0)\n- `:position_size` - Position sizing method (default: `:fixed`)\n- `:commission` - Trading commission rate (default: 0.001)\n- `:slippage` - Market slippage rate (default: 0.0005)","ref":"Quant.Strategy.html#backtest/3-options"},{"type":"function","title":"Returns - Quant.Strategy.backtest/3","doc":"DataFrame with backtest results including:\n- Portfolio value over time\n- Positions and trades\n- Performance metrics","ref":"Quant.Strategy.html#backtest/3-returns"},{"type":"function","title":"Quant.Strategy.bollinger_bands/1","doc":"See  Quant.Strategy.Volatility.bollinger_bands/1 .","ref":"Quant.Strategy.html#bollinger_bands/1"},{"type":"function","title":"Quant.Strategy.combine_signals/2","doc":"See  Quant.Strategy.Composite.combine/2 .","ref":"Quant.Strategy.html#combine_signals/2"},{"type":"function","title":"Quant.Strategy.composite/2","doc":"See  Quant.Strategy.Composite.create/2 .","ref":"Quant.Strategy.html#composite/2"},{"type":"function","title":"Quant.Strategy.ema_crossover/1","doc":"See  Quant.Strategy.MovingAverage.ema_crossover/1 .","ref":"Quant.Strategy.html#ema_crossover/1"},{"type":"function","title":"Quant.Strategy.generate_signals/3","doc":"Generate trading signals for a given DataFrame using the specified strategy.","ref":"Quant.Strategy.html#generate_signals/3"},{"type":"function","title":"Parameters - Quant.Strategy.generate_signals/3","doc":"- `dataframe` - Explorer DataFrame with OHLCV data\n- `strategy` - Strategy configuration map\n- `opts` - Optional parameters for signal generation","ref":"Quant.Strategy.html#generate_signals/3-parameters"},{"type":"function","title":"Options - Quant.Strategy.generate_signals/3","doc":"- `:column` - Base price column to use (default: `:close`)\n- `:validate` - Whether to validate required columns (default: `true`)\n- `:cleanup` - Whether to remove intermediate indicator columns (default: `false`)","ref":"Quant.Strategy.html#generate_signals/3-options"},{"type":"function","title":"Examples - Quant.Strategy.generate_signals/3","doc":"# Simple SMA crossover\n    iex> strategy = Quant.Strategy.sma_crossover(fast_period: 5, slow_period: 10)\n    iex> {:ok, df_with_signals} = Quant.Strategy.generate_signals(df, strategy)\n    iex> DataFrame.names(df_with_signals) |> Enum.member?(\"signal\")\n    true\n\n    # RSI with custom thresholds\n    iex> strategy = Quant.Strategy.rsi_threshold(oversold: 25, overbought: 75)\n    iex> {:ok, df_with_signals} = Quant.Strategy.generate_signals(df, strategy, column: :close)","ref":"Quant.Strategy.html#generate_signals/3-examples"},{"type":"function","title":"Quant.Strategy.macd_crossover/1","doc":"See  Quant.Strategy.Momentum.macd_crossover/1 .","ref":"Quant.Strategy.html#macd_crossover/1"},{"type":"function","title":"Quant.Strategy.rsi_threshold/1","doc":"See  Quant.Strategy.Momentum.rsi_threshold/1 .","ref":"Quant.Strategy.html#rsi_threshold/1"},{"type":"function","title":"Quant.Strategy.sma_crossover/1","doc":"See  Quant.Strategy.MovingAverage.sma_crossover/1 .","ref":"Quant.Strategy.html#sma_crossover/1"},{"type":"module","title":"Quant.Strategy.Backtest","doc":"Basic backtesting engine for strategy validation.\n\nThis module provides a simple backtesting framework to evaluate\ntrading strategies against historical data and calculate performance metrics.","ref":"Quant.Strategy.Backtest.html"},{"type":"module","title":"Features - Quant.Strategy.Backtest","doc":"- Portfolio value tracking over time\n- Position management and trade execution\n- Performance metrics calculation\n- Risk management (stop losses, position sizing)\n- Commission and slippage modeling","ref":"Quant.Strategy.Backtest.html#module-features"},{"type":"module","title":"Example Usage - Quant.Strategy.Backtest","doc":"strategy = Quant.Strategy.sma_crossover(fast_period: 12, slow_period: 26)\n    {:ok, results} = Quant.Strategy.Backtest.run(historical_data, strategy,\n      initial_capital: 10000.0,\n      commission: 0.001\n    )","ref":"Quant.Strategy.Backtest.html#module-example-usage"},{"type":"type","title":"Quant.Strategy.Backtest.backtest_options/0","doc":"","ref":"Quant.Strategy.Backtest.html#t:backtest_options/0"},{"type":"function","title":"Quant.Strategy.Backtest.execute_backtest/2","doc":"Execute the actual backtesting simulation.\n\nThis function processes signals sequentially and simulates trade execution,\nportfolio value changes, and risk management.","ref":"Quant.Strategy.Backtest.html#execute_backtest/2"},{"type":"function","title":"Quant.Strategy.Backtest.run/3","doc":"Run a backtest for the given strategy on historical data.","ref":"Quant.Strategy.Backtest.html#run/3"},{"type":"function","title":"Parameters - Quant.Strategy.Backtest.run/3","doc":"- `dataframe` - Historical OHLCV data\n- `strategy` - Strategy configuration\n- `opts` - Backtesting options","ref":"Quant.Strategy.Backtest.html#run/3-parameters"},{"type":"function","title":"Options - Quant.Strategy.Backtest.run/3","doc":"- `:initial_capital` - Starting capital (default: 10000.0)\n- `:position_size` - Position sizing method or fixed amount (default: :percent_capital)\n- `:commission` - Trading commission rate (default: 0.001)\n- `:slippage` - Market slippage rate (default: 0.0005)\n- `:max_positions` - Maximum concurrent positions (default: 1)\n- `:stop_loss` - Stop loss percentage (default: nil)\n- `:take_profit` - Take profit percentage (default: nil)","ref":"Quant.Strategy.Backtest.html#run/3-options"},{"type":"function","title":"Returns - Quant.Strategy.Backtest.run/3","doc":"DataFrame with backtest results including:\n- Portfolio value over time\n- Positions and trades\n- Performance metrics","ref":"Quant.Strategy.Backtest.html#run/3-returns"},{"type":"module","title":"Quant.Strategy.Composite","doc":"Composite strategy implementation for combining multiple strategies.\n\nThis module allows combining multiple individual strategies using\nvarious logical operators to create more sophisticated trading systems.","ref":"Quant.Strategy.Composite.html"},{"type":"module","title":"Combination Logic - Quant.Strategy.Composite","doc":"- `:all` (AND) - All strategies must agree for signal generation\n- `:any` (OR) - Any strategy can trigger a signal\n- `:majority` - Majority of strategies must agree\n- `:weighted` - Weighted combination based on strategy confidence","ref":"Quant.Strategy.Composite.html#module-combination-logic"},{"type":"module","title":"Examples - Quant.Strategy.Composite","doc":"# Combine SMA crossover with RSI confirmation\n    strategies = [\n      Quant.Strategy.sma_crossover(fast_period: 12, slow_period: 26),\n      Quant.Strategy.rsi_threshold(oversold: 30, overbought: 70)\n    ]\n\n    composite = Quant.Strategy.Composite.create(strategies, logic: :all)","ref":"Quant.Strategy.Composite.html#module-examples"},{"type":"type","title":"Quant.Strategy.Composite.combination_logic/0","doc":"","ref":"Quant.Strategy.Composite.html#t:combination_logic/0"},{"type":"type","title":"Quant.Strategy.Composite.strategy_weight/0","doc":"","ref":"Quant.Strategy.Composite.html#t:strategy_weight/0"},{"type":"function","title":"Quant.Strategy.Composite.apply_indicators/3","doc":"Apply indicators for all sub-strategies in the composite.","ref":"Quant.Strategy.Composite.html#apply_indicators/3"},{"type":"function","title":"Parameters - Quant.Strategy.Composite.apply_indicators/3","doc":"- `dataframe` - Input DataFrame\n- `strategy` - Composite strategy configuration\n- `opts` - Additional options","ref":"Quant.Strategy.Composite.html#apply_indicators/3-parameters"},{"type":"function","title":"Returns - Quant.Strategy.Composite.apply_indicators/3","doc":"DataFrame with all required indicators for sub-strategies applied.","ref":"Quant.Strategy.Composite.html#apply_indicators/3-returns"},{"type":"function","title":"Quant.Strategy.Composite.combine/2","doc":"Combine multiple signal DataFrames using specified logic.","ref":"Quant.Strategy.Composite.html#combine/2"},{"type":"function","title":"Parameters - Quant.Strategy.Composite.combine/2","doc":"- `signals_list` - List of DataFrames with signals\n- `opts` - Combination options","ref":"Quant.Strategy.Composite.html#combine/2-parameters"},{"type":"function","title":"Options - Quant.Strategy.Composite.combine/2","doc":"- `:logic` - Combination logic\n- `:weights` - Strategy weights\n- `:columns` - Which signal columns to combine","ref":"Quant.Strategy.Composite.html#combine/2-options"},{"type":"function","title":"Quant.Strategy.Composite.create/2","doc":"Create a composite strategy from multiple individual strategies.","ref":"Quant.Strategy.Composite.html#create/2"},{"type":"function","title":"Parameters - Quant.Strategy.Composite.create/2","doc":"- `strategies` - List of individual strategy configurations\n- `opts` - Composite strategy options","ref":"Quant.Strategy.Composite.html#create/2-parameters"},{"type":"function","title":"Options - Quant.Strategy.Composite.create/2","doc":"- `:logic` - Combination logic (`:all`, `:any`, `:majority`, `:weighted`)\n- `:weights` - Strategy weights for weighted combination (list of floats)\n- `:threshold` - Minimum confidence threshold for signal generation\n- `:name` - Name for the composite strategy","ref":"Quant.Strategy.Composite.html#create/2-options"},{"type":"function","title":"Examples - Quant.Strategy.Composite.create/2","doc":"iex> strategies = [\n    ...>   Quant.Strategy.sma_crossover(fast_period: 12, slow_period: 26),\n    ...>   Quant.Strategy.rsi_threshold(oversold: 30, overbought: 70)\n    ...> ]\n    iex> composite = Quant.Strategy.Composite.create(strategies, logic: :all)\n    iex> composite.type\n    :composite\n    iex> length(composite.strategies)\n    2","ref":"Quant.Strategy.Composite.html#create/2-examples"},{"type":"function","title":"Quant.Strategy.Composite.generate_signals/3","doc":"Generate signals for a composite strategy.\n\nThis function generates signals for each sub-strategy and then\ncombines them according to the specified combination logic.","ref":"Quant.Strategy.Composite.html#generate_signals/3"},{"type":"function","title":"Parameters - Quant.Strategy.Composite.generate_signals/3","doc":"- `dataframe` - DataFrame with all required indicators\n- `strategy` - Composite strategy configuration\n- `opts` - Signal generation options","ref":"Quant.Strategy.Composite.html#generate_signals/3-parameters"},{"type":"function","title":"Returns - Quant.Strategy.Composite.generate_signals/3","doc":"DataFrame with combined signals.","ref":"Quant.Strategy.Composite.html#generate_signals/3-returns"},{"type":"module","title":"Quant.Strategy.Momentum","doc":"Momentum-based trading strategies.\n\nThis module implements strategies based on momentum indicators\nsuch as MACD, RSI, and other oscillators that help identify\ntrend strength and potential reversal points.","ref":"Quant.Strategy.Momentum.html"},{"type":"module","title":"Supported Strategies - Quant.Strategy.Momentum","doc":"- **MACD Crossover**: MACD line crossing signal line\n- **RSI Threshold**: RSI oversold/overbought levels\n- **RSI Divergence**: Price vs RSI divergence detection","ref":"Quant.Strategy.Momentum.html#module-supported-strategies"},{"type":"module","title":"Strategy Examples - Quant.Strategy.Momentum","doc":"# Classic MACD crossover\n    strategy = Quant.Strategy.Momentum.macd_crossover(\n      fast_period: 12,\n      slow_period: 26,\n      signal_period: 9\n    )\n\n    # RSI mean reversion\n    strategy = Quant.Strategy.Momentum.rsi_threshold(\n      period: 14,\n      oversold: 30,\n      overbought: 70\n    )","ref":"Quant.Strategy.Momentum.html#module-strategy-examples"},{"type":"function","title":"Quant.Strategy.Momentum.apply_indicators/3","doc":"Apply the required technical indicators for momentum strategies.","ref":"Quant.Strategy.Momentum.html#apply_indicators/3"},{"type":"function","title":"Parameters - Quant.Strategy.Momentum.apply_indicators/3","doc":"- `dataframe` - Input DataFrame with OHLCV data\n- `strategy` - Strategy configuration\n- `opts` - Additional options","ref":"Quant.Strategy.Momentum.html#apply_indicators/3-parameters"},{"type":"function","title":"Returns - Quant.Strategy.Momentum.apply_indicators/3","doc":"DataFrame with momentum indicators added as new columns.","ref":"Quant.Strategy.Momentum.html#apply_indicators/3-returns"},{"type":"function","title":"Quant.Strategy.Momentum.get_indicator_columns/1","doc":"Get the column names that will be created by this strategy.","ref":"Quant.Strategy.Momentum.html#get_indicator_columns/1"},{"type":"function","title":"Examples - Quant.Strategy.Momentum.get_indicator_columns/1","doc":"iex> strategy = Quant.Strategy.Momentum.macd_crossover()\n    iex> columns = Quant.Strategy.Momentum.get_indicator_columns(strategy)\n    iex> \"close_macd_12_26\" in columns\n    true","ref":"Quant.Strategy.Momentum.html#get_indicator_columns/1-examples"},{"type":"function","title":"Quant.Strategy.Momentum.macd_crossover/1","doc":"Create a MACD crossover strategy.\n\nGenerates buy signals when MACD line crosses above signal line\nand sell signals when MACD line crosses below signal line.","ref":"Quant.Strategy.Momentum.html#macd_crossover/1"},{"type":"function","title":"Parameters - Quant.Strategy.Momentum.macd_crossover/1","doc":"- `:fast_period` - Fast EMA period (default: 12)\n- `:slow_period` - Slow EMA period (default: 26)\n- `:signal_period` - Signal line EMA period (default: 9)\n- `:column` - Price column to use (default: :close)","ref":"Quant.Strategy.Momentum.html#macd_crossover/1-parameters"},{"type":"function","title":"Examples - Quant.Strategy.Momentum.macd_crossover/1","doc":"iex> strategy = Quant.Strategy.Momentum.macd_crossover()\n    iex> strategy.type\n    :macd_crossover\n    iex> strategy.fast_period\n    12","ref":"Quant.Strategy.Momentum.html#macd_crossover/1-examples"},{"type":"function","title":"Quant.Strategy.Momentum.rsi_threshold/1","doc":"Create an RSI threshold strategy.\n\nGenerates buy signals when RSI drops below oversold threshold\nand sell signals when RSI rises above overbought threshold.","ref":"Quant.Strategy.Momentum.html#rsi_threshold/1"},{"type":"function","title":"Parameters - Quant.Strategy.Momentum.rsi_threshold/1","doc":"- `:period` - RSI calculation period (default: 14)\n- `:oversold` - Oversold threshold (default: 30)\n- `:overbought` - Overbought threshold (default: 70)\n- `:column` - Price column to use (default: :close)","ref":"Quant.Strategy.Momentum.html#rsi_threshold/1-parameters"},{"type":"function","title":"Examples - Quant.Strategy.Momentum.rsi_threshold/1","doc":"iex> strategy = Quant.Strategy.Momentum.rsi_threshold(oversold: 25, overbought: 75)\n    iex> strategy.type\n    :rsi_threshold\n    iex> strategy.oversold\n    25\n    iex> strategy.overbought\n    75","ref":"Quant.Strategy.Momentum.html#rsi_threshold/1-examples"},{"type":"function","title":"Quant.Strategy.Momentum.validate_dataframe/2","doc":"Validate that a DataFrame has the required columns for momentum strategies.","ref":"Quant.Strategy.Momentum.html#validate_dataframe/2"},{"type":"function","title":"Parameters - Quant.Strategy.Momentum.validate_dataframe/2","doc":"- `dataframe` - DataFrame to validate\n- `strategy` - Strategy configuration","ref":"Quant.Strategy.Momentum.html#validate_dataframe/2-parameters"},{"type":"function","title":"Returns - Quant.Strategy.Momentum.validate_dataframe/2","doc":"`:ok` if valid, `{:error, reason}` if invalid.","ref":"Quant.Strategy.Momentum.html#validate_dataframe/2-returns"},{"type":"module","title":"Quant.Strategy.MovingAverage","doc":"Moving average based trading strategies.\n\nThis module implements various moving average crossover strategies\nthat generate buy/sell signals when faster moving averages cross\nabove or below slower moving averages.","ref":"Quant.Strategy.MovingAverage.html"},{"type":"module","title":"Supported Strategies - Quant.Strategy.MovingAverage","doc":"- **SMA Crossover**: Simple Moving Average crossover\n- **EMA Crossover**: Exponential Moving Average crossover\n- **Dual MA**: Combination of different MA types","ref":"Quant.Strategy.MovingAverage.html#module-supported-strategies"},{"type":"module","title":"Strategy Examples - Quant.Strategy.MovingAverage","doc":"# Golden Cross: 50-day SMA crosses above 200-day SMA\n    strategy = Quant.Strategy.MovingAverage.sma_crossover(\n      fast_period: 50,\n      slow_period: 200\n    )\n\n    # Fast EMA crossover for short-term trading\n    strategy = Quant.Strategy.MovingAverage.ema_crossover(\n      fast_period: 12,\n      slow_period: 26\n    )","ref":"Quant.Strategy.MovingAverage.html#module-strategy-examples"},{"type":"function","title":"Quant.Strategy.MovingAverage.apply_indicators/3","doc":"Apply the required technical indicators for moving average strategies.\n\nThis function adds the necessary moving averages to the DataFrame\nbefore signal generation.","ref":"Quant.Strategy.MovingAverage.html#apply_indicators/3"},{"type":"function","title":"Parameters - Quant.Strategy.MovingAverage.apply_indicators/3","doc":"- `dataframe` - Input DataFrame with OHLCV data\n- `strategy` - Strategy configuration\n- `opts` - Additional options","ref":"Quant.Strategy.MovingAverage.html#apply_indicators/3-parameters"},{"type":"function","title":"Returns - Quant.Strategy.MovingAverage.apply_indicators/3","doc":"DataFrame with moving averages added as new columns.","ref":"Quant.Strategy.MovingAverage.html#apply_indicators/3-returns"},{"type":"function","title":"Quant.Strategy.MovingAverage.ema_crossover/1","doc":"Create an Exponential Moving Average crossover strategy.","ref":"Quant.Strategy.MovingAverage.html#ema_crossover/1"},{"type":"function","title":"Parameters - Quant.Strategy.MovingAverage.ema_crossover/1","doc":"- `:fast_period` - Period for fast EMA (default: 12)\n- `:slow_period` - Period for slow EMA (default: 26)\n- `:column` - Price column to use (default: :close)","ref":"Quant.Strategy.MovingAverage.html#ema_crossover/1-parameters"},{"type":"function","title":"Examples - Quant.Strategy.MovingAverage.ema_crossover/1","doc":"iex> strategy = Quant.Strategy.MovingAverage.ema_crossover(fast_period: 8, slow_period: 21)\n    iex> strategy.type\n    :ema_crossover\n    iex> strategy.indicator\n    :ema","ref":"Quant.Strategy.MovingAverage.html#ema_crossover/1-examples"},{"type":"function","title":"Quant.Strategy.MovingAverage.get_indicator_columns/1","doc":"Get the column names that will be created by this strategy.\n\nUseful for understanding what columns will be added to the DataFrame.","ref":"Quant.Strategy.MovingAverage.html#get_indicator_columns/1"},{"type":"function","title":"Examples - Quant.Strategy.MovingAverage.get_indicator_columns/1","doc":"iex> strategy = Quant.Strategy.MovingAverage.sma_crossover(fast_period: 5, slow_period: 10)\n    iex> Quant.Strategy.MovingAverage.get_indicator_columns(strategy)\n    [\"close_sma_5\", \"close_sma_10\"]","ref":"Quant.Strategy.MovingAverage.html#get_indicator_columns/1-examples"},{"type":"function","title":"Quant.Strategy.MovingAverage.sma_crossover/1","doc":"Create a Simple Moving Average crossover strategy.","ref":"Quant.Strategy.MovingAverage.html#sma_crossover/1"},{"type":"function","title":"Parameters - Quant.Strategy.MovingAverage.sma_crossover/1","doc":"- `:fast_period` - Period for fast SMA (default: 12)\n- `:slow_period` - Period for slow SMA (default: 26)\n- `:column` - Price column to use (default: :close)","ref":"Quant.Strategy.MovingAverage.html#sma_crossover/1-parameters"},{"type":"function","title":"Returns - Quant.Strategy.MovingAverage.sma_crossover/1","doc":"Strategy configuration map for use with `Quant.Strategy.generate_signals/2`.","ref":"Quant.Strategy.MovingAverage.html#sma_crossover/1-returns"},{"type":"function","title":"Examples - Quant.Strategy.MovingAverage.sma_crossover/1","doc":"iex> strategy = Quant.Strategy.MovingAverage.sma_crossover(fast_period: 5, slow_period: 10)\n    iex> strategy.type\n    :sma_crossover\n    iex> strategy.fast_period\n    5\n    iex> strategy.slow_period\n    10","ref":"Quant.Strategy.MovingAverage.html#sma_crossover/1-examples"},{"type":"function","title":"Quant.Strategy.MovingAverage.validate_dataframe/2","doc":"Validate that a DataFrame has the required columns for moving average strategies.","ref":"Quant.Strategy.MovingAverage.html#validate_dataframe/2"},{"type":"function","title":"Parameters - Quant.Strategy.MovingAverage.validate_dataframe/2","doc":"- `dataframe` - DataFrame to validate\n- `strategy` - Strategy configuration","ref":"Quant.Strategy.MovingAverage.html#validate_dataframe/2-parameters"},{"type":"function","title":"Returns - Quant.Strategy.MovingAverage.validate_dataframe/2","doc":"`:ok` if valid, `{:error, reason}` if invalid.","ref":"Quant.Strategy.MovingAverage.html#validate_dataframe/2-returns"},{"type":"module","title":"Quant.Strategy.Optimization","doc":"Parameter optimization engine for systematic strategy tuning.\n\nThis module provides vectorbt-like functionality for testing parameter\ncombinations and finding optimal strategy configurations.","ref":"Quant.Strategy.Optimization.html"},{"type":"module","title":"Features - Quant.Strategy.Optimization","doc":"- Single and multi-parameter optimization\n- Parallel processing for efficient computation\n- Comprehensive result analysis and ranking\n- Walk-forward optimization for robust validation\n- Integration with all existing strategy types","ref":"Quant.Strategy.Optimization.html#module-features"},{"type":"module","title":"Basic Usage - Quant.Strategy.Optimization","doc":"# Simple parameter sweep\n    {:ok, df} = Quant.Explorer.history(\"AAPL\", provider: :yahoo_finance, period: \"1y\")\n    param_ranges = %{fast_period: 5..20, slow_period: 20..50}\n    {:ok, results} = Quant.Strategy.Optimization.run_combinations(df, :sma_crossover, param_ranges)\n\n    # Find best parameters\n    best = Quant.Strategy.Optimization.find_best_params(results, :total_return)","ref":"Quant.Strategy.Optimization.html#module-basic-usage"},{"type":"module","title":"Parallel Processing - Quant.Strategy.Optimization","doc":"# Use all available cores\n    {:ok, results} = Quant.Strategy.Optimization.run_combinations_parallel(\n      df, :sma_crossover, param_ranges, concurrency: System.schedulers_online()\n    )","ref":"Quant.Strategy.Optimization.html#module-parallel-processing"},{"type":"type","title":"Quant.Strategy.Optimization.optimization_options/0","doc":"","ref":"Quant.Strategy.Optimization.html#t:optimization_options/0"},{"type":"type","title":"Quant.Strategy.Optimization.optimization_result/0","doc":"","ref":"Quant.Strategy.Optimization.html#t:optimization_result/0"},{"type":"type","title":"Quant.Strategy.Optimization.param_ranges/0","doc":"","ref":"Quant.Strategy.Optimization.html#t:param_ranges/0"},{"type":"type","title":"Quant.Strategy.Optimization.strategy_type/0","doc":"","ref":"Quant.Strategy.Optimization.html#t:strategy_type/0"},{"type":"function","title":"Quant.Strategy.Optimization.analyze_parameter_sensitivity/2","doc":"Analyze parameter sensitivity across results.\n\nShows how changes in a specific parameter affect performance metrics.","ref":"Quant.Strategy.Optimization.html#analyze_parameter_sensitivity/2"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.analyze_parameter_sensitivity/2","doc":"# See how fast_period affects returns\n    sensitivity = analyze_parameter_sensitivity(results, :fast_period)","ref":"Quant.Strategy.Optimization.html#analyze_parameter_sensitivity/2-examples"},{"type":"function","title":"Quant.Strategy.Optimization.find_best_params/2","doc":"Find the best parameter combination based on a specific metric.","ref":"Quant.Strategy.Optimization.html#find_best_params/2"},{"type":"function","title":"Parameters - Quant.Strategy.Optimization.find_best_params/2","doc":"- `results` - DataFrame from optimization results\n- `metric` - Metric to optimize for (default: :total_return)","ref":"Quant.Strategy.Optimization.html#find_best_params/2-parameters"},{"type":"function","title":"Available Metrics - Quant.Strategy.Optimization.find_best_params/2","doc":"- `:total_return` - Total portfolio return\n- `:sharpe_ratio` - Risk-adjusted return\n- `:sortino_ratio` - Downside deviation adjusted return\n- `:calmar_ratio` - Return divided by max drawdown\n- `:win_rate` - Percentage of winning trades\n- `:profit_factor` - Gross profit divided by gross loss","ref":"Quant.Strategy.Optimization.html#find_best_params/2-available-metrics"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.find_best_params/2","doc":"# Find best total return\n    best = find_best_params(results, :total_return)\n\n    # Find best risk-adjusted return\n    best = find_best_params(results, :sharpe_ratio)","ref":"Quant.Strategy.Optimization.html#find_best_params/2-examples"},{"type":"function","title":"Quant.Strategy.Optimization.parameter_heatmap/4","doc":"Generate parameter heatmap data for visualization.\n\nCreates a 2D heatmap showing how a performance metric varies\nacross two parameter dimensions.","ref":"Quant.Strategy.Optimization.html#parameter_heatmap/4"},{"type":"function","title":"Parameters - Quant.Strategy.Optimization.parameter_heatmap/4","doc":"- `results` - Optimization results DataFrame\n- `x_param` - Parameter for X-axis\n- `y_param` - Parameter for Y-axis\n- `metric` - Performance metric to visualize","ref":"Quant.Strategy.Optimization.html#parameter_heatmap/4-parameters"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.parameter_heatmap/4","doc":"# Create heatmap of total return vs fast/slow periods\n    heatmap = parameter_heatmap(results, :fast_period, :slow_period, :total_return)","ref":"Quant.Strategy.Optimization.html#parameter_heatmap/4-examples"},{"type":"function","title":"Quant.Strategy.Optimization.run_combinations/4","doc":"Run parameter combinations for a single strategy type.\n\nTests all combinations of the provided parameter ranges and returns\noptimization results as a DataFrame.","ref":"Quant.Strategy.Optimization.html#run_combinations/4"},{"type":"function","title":"Parameters - Quant.Strategy.Optimization.run_combinations/4","doc":"- `dataframe` - Historical OHLCV data\n- `strategy_type` - Strategy type atom (e.g., :sma_crossover, :rsi_threshold)\n- `param_ranges` - Map of parameter names to ranges or lists of values\n- `opts` - Optimization options","ref":"Quant.Strategy.Optimization.html#run_combinations/4-parameters"},{"type":"function","title":"Options - Quant.Strategy.Optimization.run_combinations/4","doc":"- `:initial_capital` - Starting capital (default: 10000.0)\n- `:commission` - Trading commission rate (default: 0.001)\n- `:slippage` - Market slippage rate (default: 0.0005)\n- `:store_backtest_data` - Whether to store full backtest results (default: false)","ref":"Quant.Strategy.Optimization.html#run_combinations/4-options"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.run_combinations/4","doc":"# Test SMA crossover periods\n    param_ranges = %{fast_period: 5..15, slow_period: 20..40}\n    {:ok, results} = run_combinations(df, :sma_crossover, param_ranges)\n\n    # Test with custom options\n    {:ok, results} = run_combinations(df, :sma_crossover, param_ranges,\n      initial_capital: 50_000.0,\n      commission: 0.002\n    )","ref":"Quant.Strategy.Optimization.html#run_combinations/4-examples"},{"type":"function","title":"Quant.Strategy.Optimization.run_combinations_parallel/4","doc":"Run parameter combinations using parallel processing.\n\nSame as `run_combinations/4` but processes parameter combinations\nconcurrently for improved performance.","ref":"Quant.Strategy.Optimization.html#run_combinations_parallel/4"},{"type":"function","title":"Additional Options - Quant.Strategy.Optimization.run_combinations_parallel/4","doc":"- `:concurrency` - Number of parallel tasks (default: System.schedulers_online())\n- `:progress_callback` - Function called with progress percentage\n- `:timeout` - Timeout per parameter combination in ms (default: 30_000)","ref":"Quant.Strategy.Optimization.html#run_combinations_parallel/4-additional-options"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.run_combinations_parallel/4","doc":"# Use all CPU cores\n    {:ok, results} = run_combinations_parallel(df, :sma_crossover, param_ranges,\n      concurrency: System.schedulers_online()\n    )\n\n    # With progress tracking\n    progress_fn = fn progress -> IO.puts(\"Progress: \" <> Integer.to_string(progress) <> \"%\") end\n    {:ok, results} = run_combinations_parallel(df, :sma_crossover, param_ranges,\n      progress_callback: progress_fn\n    )","ref":"Quant.Strategy.Optimization.html#run_combinations_parallel/4-examples"},{"type":"function","title":"Quant.Strategy.Optimization.run_combinations_stream/4","doc":"Run parameter combinations using memory-efficient streaming.\n\nProcesses massive parameter spaces (10,000+ combinations) in chunks\nwithout loading all results into memory simultaneously. Returns a stream\nof result chunks for further processing.","ref":"Quant.Strategy.Optimization.html#run_combinations_stream/4"},{"type":"function","title":"Parameters - Quant.Strategy.Optimization.run_combinations_stream/4","doc":"- `dataframe` - Historical OHLCV data\n- `strategy_type` - Strategy type atom\n- `param_ranges` - Map of parameter names to ranges or lists\n- `opts` - Streaming options","ref":"Quant.Strategy.Optimization.html#run_combinations_stream/4-parameters"},{"type":"function","title":"Streaming Options - Quant.Strategy.Optimization.run_combinations_stream/4","doc":"- `:chunk_size` - Combinations per chunk (default: 100)\n- `:concurrency` - Parallel tasks per chunk (default: 4)\n- `:timeout` - Timeout per chunk in ms (default: 30_000)\n- `:memory_limit` - Max memory usage in MB (default: 500)","ref":"Quant.Strategy.Optimization.html#run_combinations_stream/4-streaming-options"},{"type":"function","title":"Returns - Quant.Strategy.Optimization.run_combinations_stream/4","doc":"Stream of `{:ok, chunk_results_df}` or `{:error, reason}`","ref":"Quant.Strategy.Optimization.html#run_combinations_stream/4-returns"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.run_combinations_stream/4","doc":"# Stream massive parameter space\n    param_ranges = %{period: 1..100, threshold: 0.01..0.10//0.01}  # 10,000 combos\n    stream = run_combinations_stream(df, :sma_crossover, param_ranges, chunk_size: 50)\n\n    # Process results incrementally\n    best_result =\n      stream\n      |> Stream.filter(fn {:ok, _chunk} -> true; _ -> false end)\n      |> Stream.map(fn {:ok, chunk} -> Results.find_best_params(chunk) end)\n      |> Enum.max_by(fn result -> result.total_return end)\n\n    # Export results as they come\n    stream\n    |> Stream.each(fn {:ok, chunk} -> export_chunk_to_csv(chunk) end)\n    |> Stream.run()","ref":"Quant.Strategy.Optimization.html#run_combinations_stream/4-examples"},{"type":"function","title":"Quant.Strategy.Optimization.stability_analysis/3","doc":"Analyze parameter stability across different metrics.\n\nIdentifies parameter combinations that perform consistently\nwell across multiple performance metrics.","ref":"Quant.Strategy.Optimization.html#stability_analysis/3"},{"type":"function","title":"Parameters - Quant.Strategy.Optimization.stability_analysis/3","doc":"- `results` - Optimization results\n- `metric` - Primary metric to analyze\n- `threshold` - Stability threshold (default: 0.1)","ref":"Quant.Strategy.Optimization.html#stability_analysis/3-parameters"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.stability_analysis/3","doc":"# Find stable parameter combinations\n    stability = stability_analysis(results, :total_return, 0.15)","ref":"Quant.Strategy.Optimization.html#stability_analysis/3-examples"},{"type":"function","title":"Quant.Strategy.Optimization.walk_forward_optimization/4","doc":"Perform walk-forward optimization with rolling windows.\n\nTests parameter stability over time by optimizing on a training\nwindow and testing on a subsequent period, then rolling forward.","ref":"Quant.Strategy.Optimization.html#walk_forward_optimization/4"},{"type":"function","title":"Parameters - Quant.Strategy.Optimization.walk_forward_optimization/4","doc":"- `dataframe` - Long-term historical data\n- `strategy_type` - Strategy to optimize\n- `param_ranges` - Parameter ranges to test\n- `opts` - Walk-forward options","ref":"Quant.Strategy.Optimization.html#walk_forward_optimization/4-parameters"},{"type":"function","title":"Walk-Forward Options - Quant.Strategy.Optimization.walk_forward_optimization/4","doc":"- `:training_window` - Size of training period in days (default: 252)\n- `:testing_window` - Size of testing period in days (default: 63)\n- `:step_size` - Days to step forward each iteration (default: 21)\n- `:min_trades` - Minimum trades required for valid result (default: 5)","ref":"Quant.Strategy.Optimization.html#walk_forward_optimization/4-walk-forward-options"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.walk_forward_optimization/4","doc":"# Annual training, quarterly testing, monthly steps\n    {:ok, wf_results} = walk_forward_optimization(df, :sma_crossover, param_ranges,\n      training_window: 252,\n      testing_window: 63,\n      step_size: 21\n    )","ref":"Quant.Strategy.Optimization.html#walk_forward_optimization/4-examples"},{"type":"module","title":"Quant.Strategy.Optimization.Export","doc":"Export utilities for optimization results.\n\nProvides functionality to export parameter optimization results to various formats\nincluding CSV, JSON, and Excel-compatible formats for external analysis.","ref":"Quant.Strategy.Optimization.Export.html"},{"type":"function","title":"Quant.Strategy.Optimization.Export.summary/3","doc":"Export optimization results summary statistics.\n\nCreates a summary report with key statistics from the optimization results\nincluding best/worst performance, parameter distributions, and correlation analysis.","ref":"Quant.Strategy.Optimization.Export.html#summary/3"},{"type":"function","title":"Parameters - Quant.Strategy.Optimization.Export.summary/3","doc":"- `results` - DataFrame containing optimization results\n- `filename` - Output filename (supports .csv, .json extensions)\n- `opts` - Export options","ref":"Quant.Strategy.Optimization.Export.html#summary/3-parameters"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Export.summary/3","doc":"# Export summary to CSV\n    {:ok, path} = Export.summary(results, \"optimization_summary.csv\")\n\n    # Export detailed summary with correlations\n    {:ok, path} = Export.summary(results, \"summary.json\",\n      include_correlations: true)","ref":"Quant.Strategy.Optimization.Export.html#summary/3-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Export.to_csv/3","doc":"Export optimization results to CSV format.","ref":"Quant.Strategy.Optimization.Export.html#to_csv/3"},{"type":"function","title":"Parameters - Quant.Strategy.Optimization.Export.to_csv/3","doc":"- `results` - DataFrame containing optimization results\n- `filename` - Output filename (with or without .csv extension)\n- `opts` - Export options","ref":"Quant.Strategy.Optimization.Export.html#to_csv/3-parameters"},{"type":"function","title":"Options - Quant.Strategy.Optimization.Export.to_csv/3","doc":"- `:delimiter` - CSV delimiter (default: \",\")\n- `:precision` - Decimal precision for float values (default: 4)","ref":"Quant.Strategy.Optimization.Export.html#to_csv/3-options"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Export.to_csv/3","doc":"# Basic CSV export\n    {:ok, path} = Export.to_csv(results, \"optimization_results.csv\")\n\n    # Custom delimiter and precision\n    {:ok, path} = Export.to_csv(results, \"results.csv\",\n      delimiter: \";\", precision: 6)","ref":"Quant.Strategy.Optimization.Export.html#to_csv/3-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Export.to_json/3","doc":"Export optimization results to JSON format.","ref":"Quant.Strategy.Optimization.Export.html#to_json/3"},{"type":"function","title":"Parameters - Quant.Strategy.Optimization.Export.to_json/3","doc":"- `results` - DataFrame containing optimization results\n- `filename` - Output filename (with or without .json extension)\n- `opts` - Export options","ref":"Quant.Strategy.Optimization.Export.html#to_json/3-parameters"},{"type":"function","title":"Options - Quant.Strategy.Optimization.Export.to_json/3","doc":"- `:precision` - Decimal precision for float values (default: 4)\n- `:pretty` - Pretty print JSON (default: true)","ref":"Quant.Strategy.Optimization.Export.html#to_json/3-options"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Export.to_json/3","doc":"# Basic JSON export\n    {:ok, path} = Export.to_json(results, \"optimization_results.json\")\n\n    # Compact JSON without pretty printing\n    {:ok, path} = Export.to_json(results, \"results.json\", pretty: false)","ref":"Quant.Strategy.Optimization.Export.html#to_json/3-examples"},{"type":"module","title":"Quant.Strategy.Optimization.Ranges","doc":"Utilities for generating parameter ranges and combinations.\n\nThis module provides functions to generate parameter grids similar to\nnumpy's meshgrid functionality, supporting various range types and\nsampling strategies.","ref":"Quant.Strategy.Optimization.Ranges.html"},{"type":"function","title":"Quant.Strategy.Optimization.Ranges.fibonacci_sequence/2","doc":"Generate Fibonacci sequence within a range.\n\nUseful for parameter values that benefit from Fibonacci spacing.","ref":"Quant.Strategy.Optimization.Ranges.html#fibonacci_sequence/2"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Ranges.fibonacci_sequence/2","doc":"iex> fibonacci_sequence(1, 100)\n    [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]","ref":"Quant.Strategy.Optimization.Ranges.html#fibonacci_sequence/2-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Ranges.linspace/3","doc":"Generate linearly spaced values similar to numpy.linspace.","ref":"Quant.Strategy.Optimization.Ranges.html#linspace/3"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Ranges.linspace/3","doc":"iex> linspace(0, 10, 5)\n    [0.0, 2.5, 5.0, 7.5, 10.0]","ref":"Quant.Strategy.Optimization.Ranges.html#linspace/3-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Ranges.logarithmic_range/3","doc":"Generate logarithmic range.\n\nCreates exponentially spaced values, useful for parameters like\nperiods or thresholds that work better on a log scale.","ref":"Quant.Strategy.Optimization.Ranges.html#logarithmic_range/3"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Ranges.logarithmic_range/3","doc":"iex> logarithmic_range(1, 64, 2)\n    [1, 2, 4, 8, 16, 32]","ref":"Quant.Strategy.Optimization.Ranges.html#logarithmic_range/3-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Ranges.parameter_grid/1","doc":"Generate all combinations of parameters from a parameter map.\n\nTakes a map where keys are parameter names and values are either:\n- Ranges (e.g., 1..10)\n- Lists of specific values (e.g., [5, 10, 15, 20])\n- Single values (treated as a list with one element)","ref":"Quant.Strategy.Optimization.Ranges.html#parameter_grid/1"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Ranges.parameter_grid/1","doc":"iex> param_map = %{fast_period: 5..7, slow_period: [20, 25]}\n    iex> {:ok, combinations} = parameter_grid(param_map)\n    iex> length(combinations)\n    6\n    iex> Enum.all?(combinations, &Map.has_key?(&1, :fast_period))\n    true","ref":"Quant.Strategy.Optimization.Ranges.html#parameter_grid/1-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Ranges.random_search/2","doc":"Generate random parameter combinations.\n\nUseful for large parameter spaces where exhaustive search is impractical.","ref":"Quant.Strategy.Optimization.Ranges.html#random_search/2"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Ranges.random_search/2","doc":"iex> param_map = %{fast_period: 5..50, slow_period: 20..100}\n    iex> {:ok, samples} = random_search(param_map, 10)\n    iex> length(samples)\n    10","ref":"Quant.Strategy.Optimization.Ranges.html#random_search/2-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Ranges.range/3","doc":"Generate a range similar to numpy.arange.","ref":"Quant.Strategy.Optimization.Ranges.html#range/3"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Ranges.range/3","doc":"iex> range(1, 5)\n    [1, 2, 3, 4]\n\n    iex> range(0, 10, 2)\n    [0, 2, 4, 6, 8]","ref":"Quant.Strategy.Optimization.Ranges.html#range/3-examples"},{"type":"module","title":"Quant.Strategy.Optimization.Results","doc":"Analysis and ranking of optimization results.\n\nThis module provides functions to analyze, rank, and visualize\nparameter optimization results.","ref":"Quant.Strategy.Optimization.Results.html"},{"type":"function","title":"Quant.Strategy.Optimization.Results.combine_results/1","doc":"Combine individual optimization result maps into a single DataFrame.\n\nTakes a list of result maps (each representing one parameter combination)\nand creates a structured DataFrame for analysis.","ref":"Quant.Strategy.Optimization.Results.html#combine_results/1"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Results.combine_results/1","doc":"iex> results = [\n    ...>   %{fast_period: 5, slow_period: 20, total_return: 0.15},\n    ...>   %{fast_period: 10, slow_period: 25, total_return: 0.23}\n    ...> ]\n    iex> df = combine_results(results)\n    iex> DataFrame.n_rows(df)\n    2","ref":"Quant.Strategy.Optimization.Results.html#combine_results/1-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Results.find_best_params/2","doc":"Find the best parameter combination based on a specific metric.","ref":"Quant.Strategy.Optimization.Results.html#find_best_params/2"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Results.find_best_params/2","doc":"iex> df = DataFrame.new(%{\n    ...>   fast_period: [5, 10, 15],\n    ...>   total_return: [0.1, 0.3, 0.2]\n    ...> })\n    iex> best = find_best_params(df, :total_return)\n    iex> best.fast_period\n    10","ref":"Quant.Strategy.Optimization.Results.html#find_best_params/2-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Results.parameter_correlation/3","doc":"Analyze parameter correlation.\n\nShows how two parameters correlate in their effect on performance.","ref":"Quant.Strategy.Optimization.Results.html#parameter_correlation/3"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Results.parameter_correlation/3","doc":"iex> df = DataFrame.new(%{\n    ...>   fast_period: [5, 10, 15, 20],\n    ...>   slow_period: [20, 25, 30, 35],\n    ...>   total_return: [0.1, 0.2, 0.15, 0.25]\n    ...> })\n    iex> corr = parameter_correlation(df, :fast_period, :slow_period)\n    iex> is_number(corr)\n    true","ref":"Quant.Strategy.Optimization.Results.html#parameter_correlation/3-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Results.parameter_heatmap/4","doc":"Generate parameter heatmap data.\n\nCreates a pivot table showing how a metric varies across two parameters.","ref":"Quant.Strategy.Optimization.Results.html#parameter_heatmap/4"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Results.parameter_heatmap/4","doc":"iex> df = DataFrame.new(%{\n    ...>   fast_period: [5, 5, 10, 10],\n    ...>   slow_period: [20, 25, 20, 25],\n    ...>   total_return: [0.1, 0.15, 0.2, 0.25]\n    ...> })\n    iex> {:ok, heatmap} = parameter_heatmap(df, :fast_period, :slow_period, :total_return)\n    iex> DataFrame.n_rows(heatmap) > 0\n    true","ref":"Quant.Strategy.Optimization.Results.html#parameter_heatmap/4-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Results.pareto_frontier/2","doc":"Find Pareto frontier for multi-objective optimization.\n\nIdentifies parameter combinations that are not dominated by others\nacross multiple metrics.","ref":"Quant.Strategy.Optimization.Results.html#pareto_frontier/2"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Results.pareto_frontier/2","doc":"iex> df = DataFrame.new(%{\n    ...>   fast_period: [5, 10, 15],\n    ...>   total_return: [0.1, 0.3, 0.2],\n    ...>   max_drawdown: [0.2, 0.1, 0.15]\n    ...> })\n    iex> frontier = pareto_frontier(df, [:total_return, :max_drawdown])\n    iex> DataFrame.n_rows(frontier) <= DataFrame.n_rows(df)\n    true","ref":"Quant.Strategy.Optimization.Results.html#pareto_frontier/2-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Results.rank_by_metric/3","doc":"Rank results by a specific metric.","ref":"Quant.Strategy.Optimization.Results.html#rank_by_metric/3"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Results.rank_by_metric/3","doc":"iex> df = DataFrame.new(%{\n    ...>   fast_period: [5, 10, 15],\n    ...>   total_return: [0.1, 0.3, 0.2]\n    ...> })\n    iex> ranked = rank_by_metric(df, :total_return, :desc)\n    iex> DataFrame.n_rows(ranked)\n    3","ref":"Quant.Strategy.Optimization.Results.html#rank_by_metric/3-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Results.sensitivity_analysis/2","doc":"Perform sensitivity analysis on a parameter.\n\nShows how changes in a parameter affect performance metrics.","ref":"Quant.Strategy.Optimization.Results.html#sensitivity_analysis/2"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Results.sensitivity_analysis/2","doc":"iex> df = DataFrame.new(%{\n    ...>   fast_period: [5, 10, 15, 20],\n    ...>   total_return: [0.1, 0.2, 0.15, 0.25]\n    ...> })\n    iex> {:ok, analysis} = sensitivity_analysis(df, :fast_period)\n    iex> Map.has_key?(analysis, :correlation)\n    true","ref":"Quant.Strategy.Optimization.Results.html#sensitivity_analysis/2-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Results.stability_analysis/3","doc":"Analyze parameter stability.\n\nIdentifies parameter combinations that perform consistently\nwell across multiple metrics.","ref":"Quant.Strategy.Optimization.Results.html#stability_analysis/3"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Results.stability_analysis/3","doc":"iex> df = DataFrame.new(%{\n    ...>   fast_period: [5, 10, 15],\n    ...>   total_return: [0.1, 0.3, 0.2],\n    ...>   sharpe_ratio: [0.5, 1.2, 0.8]\n    ...> })\n    iex> {:ok, stability} = stability_analysis(df, :total_return, 0.1)\n    iex> Map.has_key?(stability, :stable_params)\n    true","ref":"Quant.Strategy.Optimization.Results.html#stability_analysis/3-examples"},{"type":"function","title":"Quant.Strategy.Optimization.Results.top_n_params/3","doc":"Get top N parameter combinations for a metric.","ref":"Quant.Strategy.Optimization.Results.html#top_n_params/3"},{"type":"function","title":"Examples - Quant.Strategy.Optimization.Results.top_n_params/3","doc":"iex> df = DataFrame.new(%{\n    ...>   fast_period: [5, 10, 15, 20],\n    ...>   total_return: [0.1, 0.3, 0.2, 0.25]\n    ...> })\n    iex> top3 = top_n_params(df, 3, :total_return)\n    iex> DataFrame.n_rows(top3)\n    3","ref":"Quant.Strategy.Optimization.Results.html#top_n_params/3-examples"},{"type":"module","title":"Quant.Strategy.Performance","doc":"Performance analysis for backtesting results.\n\nThis module provides functionality to analyze the performance of trading strategies\nincluding metrics like returns, Sharpe ratio, drawdowns, and other risk metrics.","ref":"Quant.Strategy.Performance.html"},{"type":"module","title":"Future Implementation - Quant.Strategy.Performance","doc":"This module is currently a stub and will be fully implemented with:\n- Total return and annualized return calculations\n- Risk-adjusted returns (Sharpe ratio, Sortino ratio)\n- Drawdown analysis (maximum drawdown, recovery time)\n- Win rate and profit factor\n- Risk metrics and volatility analysis","ref":"Quant.Strategy.Performance.html#module-future-implementation"},{"type":"function","title":"Quant.Strategy.Performance.analyze/2","doc":"Analyzes the performance of backtesting results.\n\nCurrently returns a placeholder response. Will be fully implemented\nto provide comprehensive performance metrics.","ref":"Quant.Strategy.Performance.html#analyze/2"},{"type":"function","title":"Parameters - Quant.Strategy.Performance.analyze/2","doc":"- `backtest_results` - DataFrame containing backtest results with portfolio values, trades, etc.\n- `opts` - Options for performance analysis (risk-free rate, benchmark, etc.)","ref":"Quant.Strategy.Performance.html#analyze/2-parameters"},{"type":"function","title":"Returns - Quant.Strategy.Performance.analyze/2","doc":"- `{:ok, performance_metrics}` - Map containing performance metrics\n- `{:error, reason}` - Error tuple if analysis fails","ref":"Quant.Strategy.Performance.html#analyze/2-returns"},{"type":"function","title":"Examples - Quant.Strategy.Performance.analyze/2","doc":"iex> backtest_df = Explorer.DataFrame.new(%{\n    ...>   portfolio_value: [10000, 10100, 10050, 10200],\n    ...>   trade_return: [0.0, 0.01, -0.005, 0.015]\n    ...> })\n    iex> {:ok, _metrics} = Quant.Strategy.Performance.analyze(backtest_df, [])\n    {:ok, %{status: :not_implemented}}","ref":"Quant.Strategy.Performance.html#analyze/2-examples"},{"type":"module","title":"Quant.Strategy.Signal","doc":"Core signal generation module for trading strategies.\n\nThis module handles the actual generation of buy/sell/hold signals\nbased on technical indicator values and strategy rules.","ref":"Quant.Strategy.Signal.html"},{"type":"module","title":"Signal Values - Quant.Strategy.Signal","doc":"- `-1`: Sell signal\n- `0`: Hold signal (no action)\n- `1`: Buy signal","ref":"Quant.Strategy.Signal.html#module-signal-values"},{"type":"module","title":"Signal Strength - Quant.Strategy.Signal","doc":"Signal strength is a float value between 0.0 and 1.0 indicating\nthe confidence level of the signal:\n- `0.0-0.3`: Weak signal\n- `0.3-0.7`: Moderate signal\n- `0.7-1.0`: Strong signal","ref":"Quant.Strategy.Signal.html#module-signal-strength"},{"type":"type","title":"Quant.Strategy.Signal.signal_strength/0","doc":"","ref":"Quant.Strategy.Signal.html#t:signal_strength/0"},{"type":"type","title":"Quant.Strategy.Signal.signal_value/0","doc":"","ref":"Quant.Strategy.Signal.html#t:signal_value/0"},{"type":"function","title":"Quant.Strategy.Signal.generate/3","doc":"Generate trading signals based on strategy configuration.","ref":"Quant.Strategy.Signal.html#generate/3"},{"type":"function","title":"Parameters - Quant.Strategy.Signal.generate/3","doc":"- `dataframe` - DataFrame with technical indicators already applied\n- `strategy` - Strategy configuration map\n- `opts` - Additional options","ref":"Quant.Strategy.Signal.html#generate/3-parameters"},{"type":"function","title":"Returns - Quant.Strategy.Signal.generate/3","doc":"DataFrame with added signal columns:\n- `signal`: Integer signal values (-1, 0, 1)\n- `signal_strength`: Float confidence values (0.0-1.0)\n- `signal_reason`: String describing signal trigger","ref":"Quant.Strategy.Signal.html#generate/3-returns"},{"type":"module","title":"Quant.Strategy.Utils","doc":"Utility functions for strategy operations.\n\nThis module provides common utility functions used across\ndifferent strategy types, including DataFrame validation,\ncolumn management, and data preprocessing.","ref":"Quant.Strategy.Utils.html"},{"type":"function","title":"Quant.Strategy.Utils.add_timing_analysis/1","doc":"Add timing information for strategy signals.\n\nAdds columns for signal timing analysis:\n- `signal_duration`: How long each signal lasts\n- `time_since_last_signal`: Time elapsed since previous signal\n- `signal_sequence`: Sequential numbering of signals","ref":"Quant.Strategy.Utils.html#add_timing_analysis/1"},{"type":"function","title":"Quant.Strategy.Utils.calculate_position_sizes/3","doc":"Calculate position sizing based on strategy configuration and risk parameters.","ref":"Quant.Strategy.Utils.html#calculate_position_sizes/3"},{"type":"function","title":"Parameters - Quant.Strategy.Utils.calculate_position_sizes/3","doc":"- `dataframe` - DataFrame with price data\n- `strategy` - Strategy configuration\n- `opts` - Position sizing options","ref":"Quant.Strategy.Utils.html#calculate_position_sizes/3-parameters"},{"type":"function","title":"Options - Quant.Strategy.Utils.calculate_position_sizes/3","doc":"- `:method` - Position sizing method (`:fixed`, `:percent_capital`, `:volatility`)\n- `:capital` - Total available capital\n- `:risk_per_trade` - Risk percentage per trade\n- `:atr_multiplier` - ATR multiplier for volatility-based sizing","ref":"Quant.Strategy.Utils.html#calculate_position_sizes/3-options"},{"type":"function","title":"Returns - Quant.Strategy.Utils.calculate_position_sizes/3","doc":"DataFrame with position sizes added.","ref":"Quant.Strategy.Utils.html#calculate_position_sizes/3-returns"},{"type":"function","title":"Quant.Strategy.Utils.cleanup_intermediate_columns/2","doc":"Remove intermediate indicator columns that are not needed in final output.","ref":"Quant.Strategy.Utils.html#cleanup_intermediate_columns/2"},{"type":"function","title":"Parameters - Quant.Strategy.Utils.cleanup_intermediate_columns/2","doc":"- `dataframe` - DataFrame with intermediate columns\n- `strategy` - Strategy configuration","ref":"Quant.Strategy.Utils.html#cleanup_intermediate_columns/2-parameters"},{"type":"function","title":"Returns - Quant.Strategy.Utils.cleanup_intermediate_columns/2","doc":"DataFrame with only essential columns retained.","ref":"Quant.Strategy.Utils.html#cleanup_intermediate_columns/2-returns"},{"type":"function","title":"Quant.Strategy.Utils.validate_dataframe/3","doc":"Validate that a DataFrame has the required structure for strategy execution.","ref":"Quant.Strategy.Utils.html#validate_dataframe/3"},{"type":"function","title":"Parameters - Quant.Strategy.Utils.validate_dataframe/3","doc":"- `dataframe` - DataFrame to validate\n- `strategy` - Strategy configuration\n- `opts` - Additional validation options","ref":"Quant.Strategy.Utils.html#validate_dataframe/3-parameters"},{"type":"function","title":"Returns - Quant.Strategy.Utils.validate_dataframe/3","doc":"`{:ok, dataframe}` if valid, `{:error, reason}` if invalid.","ref":"Quant.Strategy.Utils.html#validate_dataframe/3-returns"},{"type":"function","title":"Validations Performed - Quant.Strategy.Utils.validate_dataframe/3","doc":"- Check for required columns\n- Validate minimum number of rows\n- Check for proper data types\n- Ensure datetime index if required","ref":"Quant.Strategy.Utils.html#validate_dataframe/3-validations-performed"},{"type":"module","title":"Quant.Strategy.Volatility","doc":"Volatility-based trading strategies.\n\nThis module implements strategies based on volatility indicators\nsuch as Bollinger Bands, ATR-based systems, and volatility breakouts.","ref":"Quant.Strategy.Volatility.html"},{"type":"module","title":"Supported Strategies (Future Implementation) - Quant.Strategy.Volatility","doc":"- **Bollinger Bands**: Mean reversion using standard deviation bands\n- **ATR Breakout**: Average True Range based breakout system\n- **Volatility Squeeze**: Low volatility followed by breakout","ref":"Quant.Strategy.Volatility.html#module-supported-strategies-future-implementation"},{"type":"module","title":"Note - Quant.Strategy.Volatility","doc":"This module is a placeholder for future volatility strategy implementations.\nIt will be completed when volatility indicators are added to Quant.Math.","ref":"Quant.Strategy.Volatility.html#module-note"},{"type":"function","title":"Quant.Strategy.Volatility.apply_indicators/3","doc":"Apply volatility indicators (placeholder).","ref":"Quant.Strategy.Volatility.html#apply_indicators/3"},{"type":"function","title":"Parameters - Quant.Strategy.Volatility.apply_indicators/3","doc":"- `dataframe` - Input DataFrame\n- `strategy` - Strategy configuration\n- `opts` - Additional options","ref":"Quant.Strategy.Volatility.html#apply_indicators/3-parameters"},{"type":"function","title":"Returns - Quant.Strategy.Volatility.apply_indicators/3","doc":"Currently returns the DataFrame unchanged as volatility indicators\nare not yet implemented in Quant.Math.","ref":"Quant.Strategy.Volatility.html#apply_indicators/3-returns"},{"type":"function","title":"Quant.Strategy.Volatility.bollinger_bands/1","doc":"Create a Bollinger Bands strategy (placeholder).\n\nThis will be implemented when Bollinger Bands are added to Quant.Math.","ref":"Quant.Strategy.Volatility.html#bollinger_bands/1"},{"type":"function","title":"Parameters - Quant.Strategy.Volatility.bollinger_bands/1","doc":"- `:period` - Moving average period (default: 20)\n- `:std_mult` - Standard deviation multiplier (default: 2.0)\n- `:column` - Price column to use (default: :close)","ref":"Quant.Strategy.Volatility.html#bollinger_bands/1-parameters"},{"type":"function","title":"Quant.Strategy.Volatility.get_indicator_columns/1","doc":"Get indicator columns for volatility strategies (placeholder).","ref":"Quant.Strategy.Volatility.html#get_indicator_columns/1"},{"type":"function","title":"Quant.Strategy.Volatility.validate_dataframe/2","doc":"Validate DataFrame for volatility strategies (placeholder).","ref":"Quant.Strategy.Volatility.html#validate_dataframe/2"}],"proglang":"elixir","content_type":"text/markdown","producer":{"name":"ex_doc","version":"0.38.4"}}